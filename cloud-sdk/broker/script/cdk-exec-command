#!/usr/bin/ruby
require 'rubygems'
require 'json'
require 'open4'

encoded_command = ARGV.shift
return if encoded_command.nil?

begin
  command_data = JSON.parse(encoded_command)
rescue => e
  return
end

cartridge = command_data['cartridge']
action = command_data['action']
args = command_data['args']
reply = {}

pid, stdin, stdout, stderr = nil, nil, nil, nil

if cartridge == 'cloud-sdk'
  cmd = "cdk-#{action}"
  pid, stdin, stdout, stderr = Open4::popen4("#{cmd} #{args} 2>&1")
else
  if File.exists? "/usr/libexec/li/cartridges/#{cartridge}/info/hooks/#{action}"                
    pid, stdin, stdout, stderr = Open4::popen4("/usr/libexec/li/cartridges/#{cartridge}/info/hooks/#{action} #{args} 2>&1")
  else
    reply[:exitcode] = 127
  end
end

if reply[:exitcode] != 127
  stdin.close if stdin
  ignored, status = Process::waitpid2 pid
  exitcode = status.exitstatus
  # Do this to avoid cartridges that might hold open stdout
  output = ""
  begin
    Timeout::timeout(5) do
      while (line = stdout.gets)
        output << line
      end
    end
  rescue Timeout::Error
    #no-op
  end
end

reply[:output] = output
reply[:exitcode] = exitcode
print reply.to_json
