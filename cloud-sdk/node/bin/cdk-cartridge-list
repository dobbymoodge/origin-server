#!/usr/bin/env ruby
#--
# Copyright 2010 Red Hat, Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#    http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#++

def usage
    puts <<USAGE
== Synopsis

cdk-cartridge-list: Lists all cartridges installed on the node

== Usage

cdk-cartridge-list --with-descriptors [--porcelain]

Options:
-h|--help:
   Prints this message

USAGE
end

require 'cloud-sdk-node'
require 'cloud-sdk-common'
opts = GetoptLong.new(
    ["--with-descriptors",  "-a", GetoptLong::NO_ARGUMENT],
    ["--porcelain",         "-q", GetoptLong::NO_ARGUMENT],
    ["--debug",             "-d", GetoptLong::NO_ARGUMENT],
    ["--help",              "-?", GetoptLong::NO_ARGUMENT]
)

args = {}
begin
    opts.each{ |k,v| args[k]=v }
rescue GetoptLong::Error => e
    usage
    exit -100
end

if args["--help"]
  usage
  exit -1
end

list_descriptors = true if args['--with-descriptors']
$cdk_debug = true if args['--debug']
$porcelain = args['--porcelain'] ? true : false

begin
  carts = []
  cartridge_path = Cloud::Sdk::Config.instance.get("cartridges_path")
  Dir.foreach(cartridge_path) do |cart_dir|
    path = File.join(cartridge_path, cart_dir, "info", "manifest.yml")
    next if [".",".."].include? path
    begin
      print "Loading #{cart_dir}..." if $cdk_debug
      carts.push Cloud::Sdk::Cartridge.new.from_descriptor(YAML.load(File.open(path)))
      print "OK\n" if $cdk_debug
    rescue Exception => e
      print "ERROR\n" if $cdk_debug      
      print "#{e.message}\n#{e.backtrace.inspect}\n" unless $porcelain
    end
  end
  print "\n\n\n" if $cdk_debug
  
  if $porcelain
    if list_descriptors
      print "CLIENT_RESULT: ",carts.map{|c| c.to_descriptor.to_yaml}.to_json
    else
      print "CLIENT_RESULT: ",carts.map{|c| c.name}.to_json
    end
  else
    if list_descriptors
      carts.each do |c|
        print "Cartridge name: #{c.name}\n\nDescriptor:\n #{c.to_descriptor.inspect}\n\n\n"
      end
    else
      print "Cartridges:\n"
      carts.each do |c|
        print "\t#{c.name}\n"
      end
    end
  end
rescue Exception => e
  $stderr.puts(e.message)
  exit -1
else
  exit 0
end
