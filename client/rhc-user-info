#!/usr/bin/env ruby
# Copyright © 2010 Jim Jagielski All rights reserved
# Copyright © 2010 Mike McGrath All rights reserved
# Copyright © 2010 Red Hat, Inc. All rights reserved

# This copyrighted material is made available to anyone wishing to use, modify,
# copy, or redistribute it subject to the terms and conditions of the GNU
# General Public License v.2.  This program is distributed in the hope that it
# will be useful, but WITHOUT ANY WARRANTY expressed or implied, including the
# implied warranties of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.  You should have
# received a copy of the GNU General Public License along with this program;
# if not, write to the Free Software Foundation, Inc., 51 Franklin Street,
# Fifth Floor, Boston, MA 02110-1301, USA. Any Red Hat trademarks that are
# incorporated in the source code or documentation are not subject to the GNU
# General Public License and may only be used or replicated with the express
# permission of Red Hat, Inc.

require "rubygems"
require "uri"
require "net/http"
require "net/https"
require "getoptlong"
require "json"
require 'parseconfig'
require 'fileutils'
require File.dirname($0) + '/rhc-common'

#
# print help
#
def p_usage
    rhlogin = @local_config.get_value('default_rhlogin') ? "Default: #{@local_config.get_value('default_rhlogin')}" : "(required)"
    puts <<USAGE

Usage: rhc-user-info
Display information about a user

  -l|--rhlogin   rhlogin    RHCloud rhlogin (alphanumeric) (#{rhlogin})
  -p|--password  password   RHLogin password (alphanumeric) (optional, will prompt)
  -a|--apps                 List applications for rhlogin
  -i|--info                 Show user info
  -d|--debug                Print Debug info
  -h|--help                 Show Usage info

USAGE
exit 255
end

def validate_email(email)
    if email =~ /([^@]+)@([a-zA-Z0-9\.])+\.([a-zA-Z]{2,3})/
        if $1 =~ /[^a-zA-Z0-9\.]/
            return false
        else
            return true
        end
    else
        return false
    end
end

opts = GetoptLong.new(
    ["--debug", "-d", GetoptLong::NO_ARGUMENT],
    ["--help",  "-h", GetoptLong::NO_ARGUMENT],
    ["--apps",  "-a", GetoptLong::NO_ARGUMENT],
    ["--info",  "-i", GetoptLong::NO_ARGUMENT],
    ["--rhlogin",  "-l", GetoptLong::REQUIRED_ARGUMENT],
    ["--password",  "-p", GetoptLong::OPTIONAL_ARGUMENT]
)

# Pull in configs from files
libra_server = get_var('libra_server')
debug = get_var('debug') == 'false' ? nil : get_var('debug')
libra_domain = get_var('libra_domain')

libra_kfile = "#{ENV['HOME']}/.ssh/libra_id_rsa"
libra_kpfile = "#{ENV['HOME']}/.ssh/libra_id_rsa.pub"

opt = {}
opts.each do |o, a|
    opt[o[2..-1]] = a.to_s
end

if opt["help"]
    p_usage
end

if opt["debug"]
    debug = true
end

opt["rhlogin"] = @local_config.get_value('default_rhlogin') unless opt["rhlogin"]

if !RHC::check_rhlogin(opt['rhlogin'])
    p_usage
end

password = opt['password']
if !password
  password = RHC::get_password
end

opt['apps'] = true if not opt['info'] and not opt['apps']
user_info = RHC::get_user_info(libra_server, opt['rhlogin'], password, @http, debug)

if user_info['user_info']['uuid'] != @local_config.get_value(opt["rhlogin"])
    puts
    puts "WARNING!  The UUID in your ~/.li file is either missing or incorrect."
    puts "Please ensure the following line exists in ~/.li"
    puts
    puts "#{opt['rhlogin']}=#{user_info['user_info']['uuid']}"
    puts
end

if opt['info']
    puts "User Info"
    puts "========="
    puts "Namespace: #{user_info['user_info']['namespace']}"
    puts "    UUID: #{user_info['user_info']['uuid']}"
    puts "   RHLogin: #{user_info['user_info']['rhlogin']}"
    puts " ssh_key: #{user_info['user_info']['ssh_key']}"
end

if opt['apps']
    puts "\n\n" if opt['info']

    puts "Application Info"
    puts "================"
    user_info['app_info'].each do |key, val|
        puts key
        puts "  Framework: #{val['framework']}"
        puts "   Creation: #{val['creation_time']}"
        puts "    Git URL: ssh://#{user_info['user_info']['uuid']}@#{key}.#{user_info['user_info']['namespace']}.#{libra_domain}/~/git/#{key}.git/"
        puts " Public URL: http://#{key}.#{user_info['user_info']['namespace']}.#{libra_domain}/"
        puts ""
    end

end

exit 0
