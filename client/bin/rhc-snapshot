#!/usr/bin/env ruby
# Copyright © 2010 Jim Jagielski All rights reserved
# Copyright © 2010 Mike McGrath All rights reserved
# Copyright © 2010 Red Hat, Inc. All rights reserved

# This copyrighted material is made available to anyone wishing to use, modify,
# copy, or redistribute it subject to the terms and conditions of the GNU
# General Public License v.2.  This program is distributed in the hope that it
# will be useful, but WITHOUT ANY WARRANTY expressed or implied, including the
# implied warranties of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.  You should have
# received a copy of the GNU General Public License along with this program;
# if not, write to the Free Software Foundation, Inc., 51 Franklin Street,
# Fifth Floor, Boston, MA 02110-1301, USA. Any Red Hat trademarks that are
# incorporated in the source code or documentation are not subject to the GNU
# General Public License and may only be used or replicated with the express
# permission of Red Hat, Inc.

require 'rhc-common'

#
# print help
#
def p_usage
    rhlogin = get_var('default_rhlogin') ? "Default: #{get_var('default_rhlogin')}" : "(required)"
    puts <<USAGE

Usage: rhc-snapshot
Display information about a user

  -l|--rhlogin   rhlogin    RHCloud rhlogin (alphanumeric) (#{rhlogin})
  -a|--app                  Target application to snapshot (required)
  -s|--save                 Local path to save tarball (default: ./$APPNAME.tar.gz)
  -p|--password  password   RHLogin password (alphanumeric) (optional, will prompt)
  -d|--debug                Print Debug info
  -h|--help                 Show Usage info

USAGE
exit 255
end

opts = GetoptLong.new(
    ["--debug", "-d", GetoptLong::NO_ARGUMENT],
    ["--help",  "-h", GetoptLong::NO_ARGUMENT],
    ["--app",  "-a", GetoptLong::REQUIRED_ARGUMENT],
    ["--save",  "-s", GetoptLong::OPTIONAL_ARGUMENT],
    ["--rhlogin",  "-l", GetoptLong::REQUIRED_ARGUMENT],
    ["--password",  "-p", GetoptLong::OPTIONAL_ARGUMENT]
)

# Pull in configs from files
libra_server = get_var('libra_server')
debug = get_var('debug') == 'false' ? nil : get_var('debug')
libra_domain = get_var('libra_domain')

libra_kfile = "#{ENV['HOME']}/.ssh/libra_id_rsa"
libra_kpfile = "#{ENV['HOME']}/.ssh/libra_id_rsa.pub"

opt = {}
opts.each do |o, a|
    opt[o[2..-1]] = a.to_s
end

if opt["help"] || !opt['app']
    p_usage
end

if opt["debug"]
    debug = true
end

opt["rhlogin"] = get_var('default_rhlogin') unless opt["rhlogin"]

if !RHC::check_rhlogin(opt['rhlogin'])
    p_usage
end

password = opt['password']
if !password
  password = RHC::get_password
end

user_info = RHC::get_user_info(libra_server, opt['rhlogin'], password, @http, debug, false)

app = opt['app']
opt['save'] = "#{opt['app']}.tar.gz" unless opt['save']

begin
    framework = user_info['app_info'][app]['framework'].split('-')[0]
rescue NoMethodError
    puts
    puts "Could not find app '#{opt['app']}'.  Please run rhc-user-info to get a list"
    puts "of your current running applications"
    puts
    exit 101
end

puts "Pulling down a snapshot to #{opt['save']}"
puts 
puts "ssh #{user_info['user_info']['uuid']}@#{app}-#{user_info['user_info']['namespace']}.#{libra_domain} 'snapshot #{framework} #{app}' > #{opt['save']}" if debug
git_pull = `ssh #{user_info['user_info']['uuid']}@#{app}-#{user_info['user_info']['namespace']}.#{libra_domain} 'snapshot #{framework} #{app}' > #{opt['save']}`
if $?.exitstatus != 0
    puts
    puts "Error in trying to save snapshot.  You can try to save manually by running:"
    puts
    puts "ssh #{user_info['user_info']['uuid']}@#{app}-#{user_info['user_info']['namespace']}.#{libra_domain} 'snapshot #{framework} #{app}' > #{opt['save']}"
    puts
    exit 254
end
exit 0
