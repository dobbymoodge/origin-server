#!/usr/bin/env ruby

$: << File.expand_path(File.dirname(__FILE__))

require 'rubygems'
require 'thor'
require 'lib/openshift'
require 'pp'

class DevEnv < Thor
  desc "build", "build a new devenv AMI"
  method_option :name, :required => true, :desc => "The unique AMI name"
  def build
    # See if any updates are needed
    pkgs = check_update
    exit_msg "Nothing to update" if pkgs.empty?

    # Establish a new connection
    conn = aws_conn

    # Create a new builder instance
    instance, server = create_instance(conn, 'builder')

    print "Downloading the devenv script..."
    script_path = File.expand_path(File.dirname(__FILE__) + "/../misc/devenv/li-devenv.sh")
    scp("#{script_path} #{server}:~/")
    puts "Done"

    print "Performing clean install with the latest code..."
    output = ssh(server, 'sh li-devenv.sh', 1800)
    puts "Done"

    puts "----------------- Install Output ------------------------"
    puts output
    puts "---------------------------------------------------------"

    print "Updating all packages on the system..."
    ssh(server, 'yum update -y', 1800)
    puts "Done"

    print "Rebooting instance to apply new kernel..."
    reboot(conn, instance)
    puts "Done"

    # Validate the node installation
    validate(conn, instance, server)

    print "Retrieving RPM manifest"
    manifest = ssh(server, 'rpm -qa | grep rhc-')
    manifest = manifest.split("\n").join(" / ")
    puts "Done"

    print "Registering AMI..."
    image = register(conn, instance, options[:name], manifest)
    puts "Done"

    terminate(conn, instance)
  end
end

DevEnv.start
