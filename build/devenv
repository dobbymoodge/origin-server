#!/usr/bin/env ruby

$: << File.expand_path(File.dirname(__FILE__))

require 'rubygems'
require 'thor'
require 'lib/openshift'
require 'pp'

include OpenShift::AWS

class DevEnv < Thor
  desc "build", "build a new devenv AMI"
  method_option :name, :required => true, :desc => "The unique AMI name"
  method_option :terminate, :type => :boolean, :desc => "Terminate the instance when finished"
  method_option :reboot, :type => :boolean, :desc => "Reboot the instance after updating"
  def build
    # See if any updates are needed
    pkgs = check_update
    exit_msg "Nothing to update" if pkgs.empty?

    # Establish a new connection
    conn = connect

    # Create a new builder instance
    instance = Instance.create(conn, options[:name])

    begin
      print "Uploading devenv script..."
      script_path = File.expand_path(File.dirname(__FILE__) + "/../misc/devenv/li-devenv.sh")
      instance.scp_to(script_path, "~/")
      puts "Done"

      print "Performing clean install with the latest code..."
      output = instance.ssh('sh li-devenv.sh', 1800)
      puts "Done"

      puts "----------------- Install Output ------------------------"
      puts output
      puts "---------------------------------------------------------"

      print "Updating all packages on the system..."
      instance.ssh('yum update -y', 1800)
      puts "Done"

      if options.reboot?
        print "Rebooting instance to apply new kernel..."
        instance.reboot
        puts "Done"
      end

      # Validate the node installation
      print "Validating instance..."
      unless instance.is_valid?
        puts "ERROR - instance is not valid"
        exit 1
      end
      puts "Done"

      print "Retrieving RPM manifest"
      manifest = instance.ssh('rpm -qa | grep rhc-')
      manifest = manifest.split("\n").join(" / ")
      puts "Done"

      print "Registering AMI..."
      Image.register(conn, instance.amz_id, options[:name], manifest)
      puts "Done"
    ensure
      instance.terminate if options.terminate?
    end
  end
end

DevEnv.start
