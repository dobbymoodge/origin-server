#!/usr/bin/env ruby

$: << File.expand_path(File.dirname(__FILE__))

require 'rubygems'
require 'thor'
require 'lib/openshift'
require 'pp'


class Prune < Thor
  include OpenShift::Amazon

  desc "instances", "prune untagged and instances marked terminate"
  def instances
    conn = connect
    terminate_flagged_instances(conn)
    stop_untagged_instances(conn)
  end

  desc "amis", "prune old devenv AMIs"
  def amis
    # Get current AMIs
    conn = connect

    AWS.memoize do
      images = get_amis(conn)

      # Take the last DevEnv AMI - memoize saves a remote call
      sorted_images = images.to_a.sort_by {|ami| ami.name.split("_")[1].to_i}

      # Keep the 10 most recent images
      sorted_images.pop(10)

      # Deregister the rest
      puts "Removing AMI's #{sorted_images.pretty_inspect}"
      sorted_images.each {|i| i.deregister}
    end

  end
end

Prune.start
