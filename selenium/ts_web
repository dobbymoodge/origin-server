#!/usr/bin/env ruby

# Add current path to the load path
$: << File.dirname(__FILE__)

#
# To run specific tests, specify the name on the command line
#
require "test/unit"
require "test/unit/ui/console/testrunner"

require 'rubygems'
require 'openshift/base'
require 'openshift/sauce_helper'
require 'openshift/selenium_test_case'
require 'openshift/express/dialogs'
require 'openshift/express/navbars'
require 'openshift/express/pages'
require 'openshift/express/forms'

require 'openshift/rest/pages'
require 'openshift/rest/forms'

# Load desired test cases
Dir["testcases/*.rb"].each {|file| require file }

# Need to load the tests manually so we can
#   override at_exit

class TestDecorator < Test::Unit::TestSuite
  include OpenShift::SauceHelper

  def run(result, &progress_block)
    setup_suite
    begin
      super(result, &progress_block)
    ensure
      tear_down_suite
    end
  end

  def setup_suite
    unless OpenShift::SeleniumTestCase.local?
      ensure_tunnel
    end
  end

  def tear_down_suite
    unless OpenShift::SeleniumTestCase.local?
      close_tunnel
    end
  end
end

class TS_web
  def self.suite
    default_suites = {
      :home => Home.suite,
      :dialogs => Dialogs.suite,
      :signin => Signin.suite,
      :reset => Reset.suite,
      :signup => Signup.suite,
      :header => Header.suite,
      :express => Express.suite,
      :flex => Flex.suite,
      :console => ExpressConsole.suite,
      :rest_account => RestAccount.suite,
      :rest_console => RestConsole.suite
    }

    suite = TestDecorator.new('Sauce Tests')

    (ARGV.empty? ? default_suites.values : ARGV.map{|x| default_suites[x.downcase.to_sym]}).each do |x|
      suite << x
    end
    return suite
  end
end

result = Test::Unit::UI::Console::TestRunner.run(TS_web);

exit!(result.passed?)
