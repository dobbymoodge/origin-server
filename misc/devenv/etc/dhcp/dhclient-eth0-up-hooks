#!/bin/sh
#
# This file is sourced using (.) by /sbin/dhclient-script after the eth0 
# interface is brought up.
#
# The code here creates a file named /var/named/forwarders.conf containing
# the nameservers listed in the DHCP response.
# This allows the local named to properly respond to queries for both local
# and remote zones.

# The environment is inherited from the context in the dhclient-script at the
# time when this file is sourced.

# The file operations here require the dhcpnamedforward SELinux module to
# succeed.  If the file write fails, check that the policy is loaded.
# 

function dns_value() {
  # The value of DNS records is in the fifth field
  echo $5
}

FORWARD_CONF=${FORWARD_CONF:="/var/named/forwarders.conf"}

HOSTNAME=`hostname`
DNSDOMAINNAME=`dnsdomainname`.

NSRECORD=`dig ${DNSDOMAINNAME} NS | grep -v \; | grep NS`
NSNAME=`dns_value ${NSRECORD}`
ARECORD=`dig ${NSNAME} A | grep -v \; | grep A`
NSADDRESS=`dns_value ${ARECORD}`

HINTSCONFFILE=${HINTSCONFFILE:="/var/named/upstream_hints.conf"}
HINTSDBFILE=${HINTSDBFILE:="/var/named/upstream_hints.db"}

if [ -n "$new_domain_name_servers" ]
then
# remove the localhost reference if it's provided
NAME_SERVER_LIST=`echo ${new_domain_name_servers} | sed -e 's/127.0.0.1 *// ; s/ / ; /g'`
cat > ${FORWARD_CONF} <<EOF
// created by /etc/dhcp/dhclient-eth0-up-hooks
// set named forwarders from the DHCP supplied name server list
forward first ;
forwarders { ${NAME_SERVER_LIST} ; } ;
EOF

  logmessage "set forwarders: ${NAME_SERVER_LIST}"


cat > ${HINTSCONFFILE} <<EOF
zone \"${DNSDOMAINNAME}\" IN {
      type hint ;
      file \"${HINTSDBFILE}\";
};
EOF

cat > ${HINTSDBFILE} <<EOF
${DNSDOMAINNAME}	3600	IN	NS	${NSNAME}
${NSNAME}	3600	IN	A	${NSADDRESS}
EOF
  
  # reload the named configuration if needed
  if service named status
  then
    service named reload
  fi
else
  logmessage "no new name servers provided by DHCP"
fi

