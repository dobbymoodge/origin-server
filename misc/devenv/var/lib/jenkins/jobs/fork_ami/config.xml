<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Build an ami from a fork(s) of the openshift source with options to run extended and qe tests.  The QE jenkins is located at:  http://ciqe.englab.nay.redhat.com/&#xd;
&lt;p&gt;&#xd;
Note: You&apos;ll want to make sure your repos are up to date with something similar to the following before kicking off a build (or you will likely be missing the necessary tags in your repo in order to build the ami):&#xd;
&lt;pre&gt;&#xd;
git fetch upstream&#xd;
git fetch upstream --tags&#xd;
git rebase upstream/master&#xd;
git push origin master&#xd;
git push --tags&#xd;
&lt;/pre&gt;&#xd;
&lt;/p&gt;</description>
  <logRotator>
    <daysToKeep>10</daysToKeep>
    <numToKeep>50</numToKeep>
    <artifactDaysToKeep>10</artifactDaysToKeep>
    <artifactNumToKeep>50</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>AMI_POSTFIX</name>
          <description>The postfix to add to the ami name =&gt; fork_ami_${AMI_POSTFIX}_${BUILD_NUMBER}
Usually would be the feature name or something to indicate the purpose of the ami.  Only 1 ami per postfix is kept.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>FORK_ID</name>
          <description>The default fork id to use for all repos.  Leave empty unless you have relevant forks for all the repos. If you only want to use a fork for 1 - (n-1) of the repos then use that ${REPO}_FORK_ID instead.  Any  ${REPO}_FORK_IDs specified will override FORK_ID for that repo.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEV_TOOLS_EXT_FORK_ID</name>
          <description>The fork id to use for the DEV_TOOLS_EXT (li) repo.  Will use FORK_ID followed by &apos;openshift&apos; if not specified.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEV_TOOLS_EXT_BRANCH</name>
          <description>Branch to use for DEV_TOOLS_EXT (li) fork</description>
          <defaultValue>master</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEV_TOOLS_EXT_REPO</name>
          <description>The name of the DEV_TOOLS_EXT (li) repo</description>
          <defaultValue>li</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ORIGIN_SERVER_FORK_ID</name>
          <description>The fork id to use for the origin-server repo.  Will use FORK_ID followed by &apos;openshift&apos; if not specified.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ORIGIN_SERVER_BRANCH</name>
          <description>Branch to use for origin-server fork</description>
          <defaultValue>master</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ORIGIN_SERVER_REPO</name>
          <description>The name of the origin-server repo</description>
          <defaultValue>origin-server</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>RHC_FORK_ID</name>
          <description>The fork id to use for the rhc repo.  Will use FORK_ID followed by &apos;openshift&apos; if not specified.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>RHC_BRANCH</name>
          <description>Branch to use for rhc fork</description>
          <defaultValue>master</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>RHC_REPO</name>
          <description>The name of the rhc repo</description>
          <defaultValue>rhc</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEV_TOOLS_FORK_ID</name>
          <description>The fork id to use for the origin-dev-tools repo.  Will use FORK_ID followed by &apos;openshift&apos; if not specified.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEV_TOOLS_BRANCH</name>
          <description>Branch to use for origin-dev-tools fork</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEV_TOOLS_REPO</name>
          <description>The name of the origin-dev-tools repo</description>
          <defaultValue>origin-dev-tools</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RUN_BROKER_EXTENDED</name>
          <description>In addition to the verification tests include the broker extended tests.  Note:  The ami will still be marked qe-ready and the qe tests launched even if these tests fail.</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RUN_RUNTIME_EXTENDED</name>
          <description>In addition to the verification tests include the runtime extended tests.  Note:  The ami will still be marked qe-ready and the qe tests launched even if these tests fail.</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RUN_SITE_EXTENDED</name>
          <description>In addition to the verification tests include the site extended tests.  Note:  The ami will still be marked qe-ready and the qe tests launched even if these tests fail.</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RUN_RHC_EXTENDED</name>
          <description>In addition to the verification tests include the rhc extended tests.  Note:  The ami will still be marked qe-ready and the qe tests launched even if these tests fail.</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RUN_QE_SMOKE_TESTS</name>
          <description>Run the QE &apos;smoke&apos; tests after build and basic verification success.  These tests should be run for most amis and take ~1 hours on 1 instance.
https://tcms.engineering.redhat.com/cases/?plan=4962&amp;is_automated=1&amp;case_status=2&amp;tag__name__in=smoke&amp;a=search</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RUN_QE_ACCEPTANCE_TESTS</name>
          <description>Run the QE &apos;acceptance&apos; tests after build and basic verification success.  These tests take ~3 hours to complete (using 2 instances).  They should be run for any significant changes.
https://tcms.engineering.redhat.com/cases/?plan=4962&amp;is_automated=1&amp;case_status=2&amp;tag__name__in=acceptance&amp;a=search</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RUN_QE_FULLFUNCTIONAL_TESTS</name>
          <description>Run the QE &apos;fullfunction&apos; tests after build and basic verification success.  These tests take ~5 hours to complete (using 2 instances).  They should be run for the largest of changes (large user stories or changes involving a lot of refactoring)
https://tcms.engineering.redhat.com/cases/?plan=4962&amp;is_automated=1&amp;case_status=2&amp;tag__name__in=fullfunction&amp;a=search</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <authToken>libra1</authToken>
  <triggers class="vector"/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>EXTENDED_TESTS_ARRAY=()
if $RUN_BROKER_EXTENDED
then
  EXTENDED_TESTS_ARRAY+=(broker)
fi
if $RUN_RUNTIME_EXTENDED
then
  EXTENDED_TESTS_ARRAY+=(runtime)
fi
if $RUN_SITE_EXTENDED
then
  EXTENDED_TESTS_ARRAY+=(site)
fi
if $RUN_RHC_EXTENDED
then
  EXTENDED_TESTS_ARRAY+=(rhc)
fi


EXTENDED_TESTS=&quot;&quot;
for test in &quot;${EXTENDED_TESTS_ARRAY[@]}&quot;
do
  if [ -z &quot;$EXTENDED_TESTS&quot; ]
  then
    EXTENDED_TESTS=$test
  else
    EXTENDED_TESTS=$EXTENDED_TESTS,$test
  fi
done

if [ -n &quot;$FORK_ID&quot; ]
then
  if [ -z &quot;$DEV_TOOLS_EXT_FORK_ID&quot; ]
  then
    DEV_TOOLS_EXT_FORK_ID=$FORK_ID
  fi
  if [ -z &quot;$ORIGIN_SERVER_FORK_ID&quot; ]
  then
    ORIGIN_SERVER_FORK_ID=$FORK_ID
  fi
  if [ -z &quot;$RHC_FORK_ID&quot; ]
  then
    RHC_FORK_ID=$FORK_ID
  fi
  if [ -z &quot;$DEV_TOOLS_FORK_ID&quot; ]
  then
    DEV_TOOLS_FORK_ID=$FORK_ID
  fi
else
  if [ -z &quot;$DEV_TOOLS_EXT_FORK_ID&quot; ]
  then
    DEV_TOOLS_EXT_FORK_ID=openshift
  fi
  if [ -z &quot;$ORIGIN_SERVER_FORK_ID&quot; ]
  then
    ORIGIN_SERVER_FORK_ID=openshift
  fi
  if [ -z &quot;$RHC_FORK_ID&quot; ]
  then
    RHC_FORK_ID=openshift
  fi
  if [ -z &quot;$DEV_TOOLS_FORK_ID&quot; ]
  then
    DEV_TOOLS_FORK_ID=openshift
  fi
fi

if [ -n &quot;$AMI_POSTFIX&quot; ]
then
  TAG_NAME=fork_ami_${AMI_POSTFIX}
elif [ -n &quot;$FORK_ID&quot; ]
then
  TAG_NAME=fork_ami_${FORK_ID}
elif [ -n &quot;$DEV_TOOLS_EXT_FORK_ID&quot; ]
then
  TAG_NAME=fork_ami_${DEV_TOOLS_EXT_FORK_ID}
elif [ -n &quot;$ORIGIN_SERVER_FORK_ID&quot; ]
then
  TAG_NAME=fork_ami_${ORIGIN_SERVER_FORK_ID}
elif [ -n &quot;$RHC_FORK_ID&quot; ]
then
  TAG_NAME=fork_ami_${RHC_FORK_ID}
elif [ -n &quot;$DEV_TOOLS_FORK_ID&quot; ]
then
  TAG_NAME=fork_ami_${DEV_TOOLS_FORK_ID}
else
  TAG_NAME=fork_ami_openshift
fi

rm -rf $DEV_TOOLS_EXT_REPO $RHC_REPO $ORIGIN_SERVER_REPO $DEV_TOOLS_REPO

git clone git@github.com:${DEV_TOOLS_EXT_FORK_ID}/${DEV_TOOLS_EXT_REPO}.git
pushd $DEV_TOOLS_EXT_REPO
  if [ -n &quot;$DEV_TOOLS_EXT_BRANCH&quot; ]
  then
    git checkout $DEV_TOOLS_EXT_BRANCH
  fi
popd
git clone git@github.com:${ORIGIN_SERVER_FORK_ID}/${ORIGIN_SERVER_REPO}.git
pushd $ORIGIN_SERVER_REPO
  if [ -n &quot;$ORIGIN_SERVER_BRANCH&quot; ]
  then
    git checkout $ORIGIN_SERVER_BRANCH
  fi
popd
git clone git@github.com:${RHC_FORK_ID}/${RHC_REPO}.git
pushd $RHC_REPO
  if [ -n &quot;$RHC_BRANCH&quot; ]
  then
    git checkout $RHC_BRANCH
  fi
popd
git clone git@github.com:${DEV_TOOLS_FORK_ID}/${DEV_TOOLS_REPO}.git
pushd $DEV_TOOLS_REPO
  if [ -n &quot;$DEV_TOOLS_BRANCH&quot; ]
  then
    git checkout $DEV_TOOLS_BRANCH
  fi
popd

pushd $DEV_TOOLS_EXT_REPO
set +e
  build/devenv build ${TAG_NAME} ${BUILD_NUMBER} --register --official --install_from_local_source
  RESULT=$?
set -e

  if [ $RESULT -eq 0 ]
  then

    QE_TESTS_ARRAY=()
    if $RUN_QE_FULLFUNCTIONAL_TESTS
    then
      QE_TESTS_ARRAY+=(fullfunction)
    elif $RUN_QE_ACCEPTANCE_TESTS
    then
      QE_TESTS_ARRAY+=(acceptance)
    elif $RUN_QE_SMOKE_TESTS
    then
      QE_TESTS_ARRAY+=(smoke)
    fi

    QE_TESTS=&quot;&quot;
    for test in &quot;${QE_TESTS_ARRAY[@]}&quot;
    do
      if [ -z &quot;$QE_TESTS&quot; ]
      then
        QE_TESTS=$test
      else
        QE_TESTS=$QE_TESTS,$test
      fi
    done
    
    if [ -n &quot;$QE_TESTS&quot; ]
    then
      sed -i &quot;/${TAG_NAME}_.*/d&quot; ~/fork_ami_qe_test_queue
      echo &quot;${TAG_NAME}_${BUILD_NUMBER}=$QE_TESTS&quot; &gt;&gt; ~/fork_ami_qe_test_queue
    fi

    if [ -n &quot;$EXTENDED_TESTS&quot; ]
    then
      # Run the extended tests
      build/devenv test ${TAG_NAME}_${BUILD_NUMBER} --include_extended=&quot;$EXTENDED_TESTS&quot; --terminate 
    else
      build/devenv terminate ${TAG_NAME}_${BUILD_NUMBER}
    fi
  else
    build/devenv terminate ${TAG_NAME}_${BUILD_NUMBER}
    exit $RESULT
  fi
popd</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>li/rhc/log/**</artifacts>
      <latestOnly>false</latestOnly>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>li/rhc/log/**/*.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
  </publishers>
  <buildWrappers/>
</project>