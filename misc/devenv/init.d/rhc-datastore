#!/bin/bash
#
# rhc-datastore This shell script can configure/start/stop libra datastore service
#
# Author:       Ravi <rpenta@redhat.com>
# Edited original mongod init script 
#
# chkconfig:    345 89 01
#
# description:  Start and stop mongod service with given params
# processname:  NA
#

# source function library
. /etc/rc.d/init.d/functions

prog="mongod"
options="--replSet libra_rs --auth --journal --smallfiles --nssize=8 --oplogSize=8"

[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

function start_mongod_with_replica_sets() {
    service mongod stop  || :
    pkill -u mongodb
    #  Use /etc/init.d in lieu of service otherwise options are not passed down.
    MONGODB_OPTIONS="$options" /etc/init.d/mongod start
}


rh_configure_mongo() {
    # Start mongod server with replicasets config
    start_mongod_with_replica_sets
    retry_cnt=0
    while true; do
        sleep 2
        # Setup replica set and user
        echo 'rs.initiate({_id: "libra_rs", members:[{_id: 0, host:"localhost:27017"}]});' | mongo > /dev/null 2>&1
        if [ $? -eq 0 ]; then
            break;
        fi
        retry_cnt=$((retry_cnt + 1))
        if [ $retry_cnt -ge 60 ]; then
            echo "Unable to start mongod server"
            exit 1
        fi
    done
    retry_cnt=0
    while true; do
        sleep 1
        rs_state=`echo 'rs.status()["myState"] == 1' | mongo`
        if [[ $rs_state =~ "true" ]]; then
            break;
        fi  
        retry_cnt=$((retry_cnt + 1))
        if [ $retry_cnt -ge 60 ]; then
            echo "Unable to switch to PRIMARY"
            exit 1
        fi
    done
    echo 'db.getMongo().setSlaveOk();
          use openshift_broker_dev
          db.addUser("libra", "momo")
          exit
         ' | mongo
    # Stop mongod server
    service mongod stop
}

rh_configure_rockmongo() {
    /bin/cp -r /usr/libexec/openshift/cartridges/embedded/rockmongo-1.1/info/rockmongo/ /var/www/html/
    /bin/chmod -R 755 /var/www/html/rockmongo/
    echo '
<?php
$MONGO = array();
$MONGO["features"]["log_query"] = "off"; //log queries
$MONGO["features"]["theme"] = "default"; //theme
$MONGO["features"]["plugins"] = "on"; //plugins

$MONGO["servers"][0]["mongo_host"] = "localhost"; //mongo host
$MONGO["servers"][0]["mongo_port"] = "27017"; //mongo port
$MONGO["servers"][0]["mongo_timeout"] = 30; //mongo connection timeout
$MONGO["servers"][0]["mongo_db"] = "openshift_broker_dev"; //default mongo db to connect, works only if mongo_auth=false
$MONGO["servers"][0]["mongo_user"] = "libra"; //mongo authentication user name, works only if mongo_auth=false
$MONGO["servers"][0]["mongo_pass"] = "momo"; //mongo authentication password, works only if mongo_auth=false
$MONGO["servers"][0]["mongo_auth"] = false; //enable mongo authentication?

$MONGO["servers"][0]["control_auth"] = false; //enable control users, works only if mongo_auth=false
?>
' > /var/www/html/rockmongo/config.php
    echo ' 
Alias /datastore /var/www/html/rockmongo/

<Directory /var/www/html/rockmongo/>
Order Allow,Deny
Allow from All
</Directory>
' > /etc/httpd/conf.d/openshift-datastore.conf
    #/etc/init.d/httpd restart
}


case "$1" in
    configure)
        rh_configure_mongo && rh_configure_rockmongo
        ;;
    *)
        #  Use /etc/init.d in lieu of service otherwise options are not
        #  passed down.
        MONGODB_OPTIONS="$options" /etc/init.d/mongod "$@"
        ;;
esac
exit $?
