#!/usr/bin/env ruby

require 'rubygems'
require 'parseconfig'
require 'thor'
require 'fileutils'
require 'aws'
require 'pp'

class Applications < Thor
  include Thor::Actions

  no_tasks do
    def connect
      config = nil
      begin
        config = ParseConfig.new(File.expand_path("~/.awscred"))
      rescue StandardError => e
        puts <<-eos
          Couldn't access credentials in ~/.awscred

          Please create a file with the following format:
            AWSAccessKeyId=<ACCESS_KEY>
            AWSSecretKey=<SECRET_KEY>
        eos
        raise "Error - no credentials"
      end

      # Setup the global access configuration
      AWS.config(
        :access_key_id => config.get_value("AWSAccessKeyId"),
        :secret_access_key => config.get_value("AWSSecretKey"),
        :ssl_ca_file => "/etc/pki/tls/certs/ca-bundle.trust.crt"
      )

      # Return the AMZ connection
      AWS::S3.new
    end
  end

  desc "count", "return the count of all OpenShift accounts"
  method_option :bucket, :required => true, :desc => "The S3 bucket (e.g. libra_dev, rhc_prod)"
  def count
    s3 = connect
    count = 0
    s3.buckets[options[:bucket]].objects.each do |result|
      if result.key =~ /\/apps\//
        count += 1
      end
    end
    puts "Total count: #{count}"
  end

  desc "lookup RHLOGIN", "return the application info for a user"
  method_option :bucket, :required => true, :desc => "The S3 bucket (e.g. libra_dev, rhc_prod)"
  def lookup(rhlogin)
    s3 = connect
    s3.buckets[options[:bucket]].objects.with_prefix("user_info/#{rhlogin}/apps/").each do |result|
      app_name = File.basename(result.key, '.json')
      puts "Application: #{app_name}" if app_name
    end
  end
  
end

Applications.start
