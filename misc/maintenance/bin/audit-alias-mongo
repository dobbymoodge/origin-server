#!/usr/bin/env oo-ruby
# -*- ruby -*-

require 'rubygems'
require 'mongo'
require 'json'
$:.unshift('/var/www/openshift/broker')
require 'config/environment'

def mongo_connect
  db = OpenShift::DataStore.db
  $coll = db.collection('user')
end

@MALFORMED = Hash.new()
@NOT_DNS = Hash.new()
@DUPSET = Hash.new{ |hash, key| hash[key] = [] }
def alias_validates
  $coll.find({ "aliases.0" => { "$exists" => true } },
             { :fields => ["aliases", "name"] } ) do |cursor|
    cursor.each do |hash|

      id = hash["_id"]
      name = hash["name"]

      if hash["aliases"] != nil

        hash["aliases"].each do |server_alias|
        
          # Would we have rejected this alias
          if !(server_alias =~ /\A[0-9a-zA-Z\-\.]+\z/) or
              (server_alias =~ /#{Rails.configuration.openshift[:domain_suffix]}$/) or
              (server_alias.length > 255 ) or
              (server_alias.length == 0 ) or
              (server_alias =~ /^\d+\.\d+\.\d+\.\d+$/)
            @MALFORMED[server_alias]=[id, name, server_alias]
            
          elsif !(server_alias =~ /\.[0-9A-Za-z\-]*[0-9A-Za-z]$/)
            @NOT_DNS[server_alias]=[id, name, server_alias]
          end
          
          d_server_alias = server_alias.downcase
          @DUPSET[d_server_alias] << [id, name, server_alias]
          
        end
      end

    end
  end

  @DUPSET.delete_if { |k, v| v.length < 2 }

  output = {
    'DUPSET'    => @DUPSET,
    'MALFORMED' => @MALFORMED,
    'NOT_DNS'   => @NOT_DNS
  }

  puts JSON.pretty_generate(output)

end

mongo_connect
alias_validates
