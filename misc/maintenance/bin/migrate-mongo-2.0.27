#!/usr/bin/env oo-ruby
require 'rubygems'
$:.unshift('/var/www/openshift/broker')
require 'config/environment'

begin
  db = OpenShift::DataStore.db
  puts "Removing usage records related to additional storage for existing users..."
  db["usage_records"].remove("usage_type" => "ADDTL_FS_GB")
  db["usage"].remove("usage_type" => "ADDTL_FS_GB")

  puts "Updating capabilities for existing users..."
  filter = {"plan_id" => "silver", "capabilities.max_storage_per_gear" => 30}
  update_query = {"$unset" => {"capabilities.max_storage_per_gear" => 1},
                  "$set" => {"capabilities.max_untracked_addtl_storage_per_gear" => 5,
                             "capabilities.max_tracked_addtl_storage_per_gear" => 0}}
  db["cloud_users"].update(filter, update_query, { :multi => true })
 
  filter = {"capabilities.max_storage_per_gear" => {"$exists" => true}}
  selection = {:fields => ["capabilities.max_storage_per_gear"], :timeout => false}
  db["cloud_users"].find(filter, selection) do |cursor|
    cursor.each do |user|
      update_query = {"$unset" => {"capabilities.max_storage_per_gear" => 1},
                      "$set" => {"capabilities.max_untracked_addtl_storage_per_gear" => user["capabilities"]["max_storage_per_gear"], 
                                 "capabilities.max_tracked_addtl_storage_per_gear" => 0}}
      db["cloud_users"].update({"_id" => user["_id"]}, update_query) 
    end
  end
rescue Exception => e
  puts e.message
  puts e.backtrace
  exit 1
end
puts "Migration Done!"
