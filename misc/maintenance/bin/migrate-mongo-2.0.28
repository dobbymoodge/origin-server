#!/usr/bin/env oo-ruby
require 'rubygems'
$:.unshift('/var/www/openshift/broker')
require 'config/environment'

begin
  db = OpenShift::DataStore.db(:primary)

  # Mark all the gears as an update in progress
  gi_count = 0
  gi_search_count = 1
  while gi_search_count > 0 do
    gear_count = 0
    gear_search_count = 1
    while gear_search_count > 0
      filter = {"group_instances.#{gi_count}.gears.#{gear_count}" => {"$exists" => true}}
      update_query = {'$set' => {"group_instances.#{gi_count}.gears.#{gear_count}.quarantined" => true}}
      db["applications"].update(filter, update_query, { :multi => true })
      gear_count += 1
      gear_search_count = db["applications"].find({"group_instances.#{gi_count}.gears.#{gear_count}" => {"$exists" => true}}).count
    end
    gi_count += 1
    gi_search_count = db["applications"].find({"group_instances.#{gi_count}.gears.0" => {"$exists" => true}}).count
  end

  # multi update to unset the connections field
  db["applications"].update({"connections" => {"$exists" => true}}, {"$unset" => {"connections" => true}}, {:multi => true})

  # multi update to unset the externally_reserved_uids_size field in the districts collection 
  db["districts"].update({"externally_reserved_uids_size" => {"$exists" => true}}, {"$unset" => {"externally_reserved_uids_size" => 1}}, {:multi => true})
  
rescue Exception => e
  puts e.message
  puts e.backtrace
  exit 1
end
puts "Migration Done!"
