#!/bin/bash

# Copyright © 2010 Mike McGrath All rights reserved
# Copyright © 2010 Red Hat, Inc. All rights reserved

# This copyrighted material is made available to anyone wishing to use, modify,
# copy, or redistribute it subject to the terms and conditions of the GNU
# General Public License v.2.  This program is distributed in the hope that it
# will be useful, but WITHOUT ANY WARRANTY expressed or implied, including the
# implied warranties of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.  You should have
# received a copy of the GNU General Public License along with this program;
# if not, write to the Free Software Foundation, Inc., 51 Franklin Street,
# Fifth Floor, Boston, MA 02110-1301, USA. Any Red Hat trademarks that are
# incorporated in the source code or documentation are not subject to the GNU
# General Public License and may only be used or replicated with the express
# permission of Red Hat, Inc.

# Creates a jenkins client instance

# Exit on any errors
set -e

function print_help {
    echo "Usage: $0 app-name namespace uuid"

    echo "$0 $@" | logger -p local0.notice -t libra_mysql_configure
    exit 1
}

while getopts 'd' OPTION
do
    case $OPTION in
        d) set -x
        ;;
        ?) print_help
        ;;
    esac
done


[ $# -eq 3 ] || print_help

CART_DIR=${CART_DIR:=/usr/libexec/li/cartridges}
source ${CART_DIR}/li-controller/info/lib/util

app_type="jenkins-client-1.4"
setup_embedded_configure "$1" $2 $3

#
# Create the core of the application
#

if ! [ -f "$APP_HOME/.env/JENKINS_URL" ]
then
    client_error "Jenkins server does not exist!  Please create with rhc-create-app -t jenkins-1.4"
    exit 132
fi
if [ -f "$APP_HOME/.env/OPENSHIFT_CI_TYPE" ]
then
    client_error "Jenkins client already embedded in $application"
    exit 132
fi

#
# Setup Environment Variables
#
echo "export OPENSHIFT_CI_TYPE='jenkins-1.4'" > $APP_HOME/.env/OPENSHIFT_CI_TYPE
echo "export PATH=\$PATH:${CART_INFO_DIR}/bin/" > $APP_HOME/.env/PATH_JENKINS_CLIENT

. $APP_HOME/.env/OPENSHIFT_HOMEDIR
. $APP_HOME/.env/OPENSHIFT_APP_NAME
. $APP_HOME/.env/OPENSHIFT_APP_UUID
. $APP_HOME/.env/OPENSHIFT_APP_TYPE
. $APP_HOME/.env/JENKINS_URL
. $APP_HOME/.env/JENKINS_USERNAME
. $APP_HOME/.env/JENKINS_PASSWORD

mkdir -p "$OPENSHIFT_HOMEDIR/jenkins-client-1.4/"

if ! $(/usr/bin/wget --no-check-certificate -q ${JENKINS_URL}jnlpJars/jenkins-cli.jar -O "$OPENSHIFT_HOMEDIR/jenkins-client-1.4/jenkins-cli.jar")
then
   client_error "Error contacting Jenkins server."
   client_error "Could not download ${JENKINS_URL}jnlpJars/jenkins-cli.jar"
   exit 157
fi

echo $JENKINS_PASSWORD > $OPENSHIFT_HOMEDIR/jenkins-client-1.4/.password

# Maybe allow cartridges to create their own jenkins job
if [ -f "${CART_DIR}/${OPENSHIFT_APP_TYPE}/info/configuration/jenkins_job_template.xml" ]
then
    JOB_XML="${CART_DIR}/${OPENSHIFT_APP_TYPE}/info/configuration/jenkins_job_template.xml"
else
    JOB_XML="$CART_INFO_DIR/configuration/jenkins_job_template.xml"
fi

if out=$(/bin/sed -e "s,UPSTREAM_REPO_URL,ssh://${uuid}@${OPENSHIFT_APP_NAME}-${namespace}.${libra_domain}/~/git/${OPENSHIFT_APP_NAME}.git/,g" \
         -e "s,UPSTREAM_SSH,${OPENSHIFT_APP_UUID}@${OPENSHIFT_APP_NAME}-${namespace}.${libra_domain},g" \
         -e "s,UPSTREAM_APP_NAME,${OPENSHIFT_APP_NAME},g" $JOB_XML | runuser --shell /bin/sh "$uuid" -c "runcon -t libra_t -l $mcs_level ${CART_INFO_DIR}/bin/jenkins-cli create-job --username "$JENKINS_USERNAME" --password-file "${OPENSHIFT_HOMEDIR}jenkins-client-1.4/.password" '${OPENSHIFT_APP_NAME}-build'" 2>&1)
then
    # Embedding success
    client_result ""
else
    if enable_out=$(runuser --shell /bin/sh "$uuid" -c "runcon -t libra_t -l $mcs_level ${CART_INFO_DIR}/bin/jenkins-cli enable-job --username "$JENKINS_USERNAME" --password-file "${OPENSHIFT_HOMEDIR}jenkins-client-1.4/.password" '${OPENSHIFT_APP_NAME}-build'" 2>&1)
    then
        client_result ""
        client_result "Associated with existing job '${OPENSHIFT_APP_NAME}-build' in Jenkins server."
        client_result "If this was not intended you can remove the jenkins client, remove or rename " 
        client_result "the existing job, and re-add the jenkins client to get a new job created."
    else
        # An error occurred enabling existing job
        client_error ""
        client_error "Could not add job '${OPENSHIFT_APP_NAME}-build' in Jenkins server:"
        client_error "   $out"
        client_error "You'll need to correct this error before attempting to embed the Jenkins client again."
        exit 1
    fi
fi
client_result "Job URL: ${JENKINS_URL}job/${OPENSHIFT_APP_NAME}-build/"
client_result ""
client_result "Jenkins client 1.4 has been added to: $OPENSHIFT_APP_NAME"
