#!/bin/bash

# Creates a phpmoadmin instance

# Exit on any errors
set -e

function print_help {
    echo "Usage: $0 app-name namespace uuid"

    echo "$0 $@" | logger -p local0.notice -t openshift_origin_phpmoadmin_configure
    exit 1
}

while getopts 'd' OPTION
do
    case $OPTION in
        d) set -x
        ;;
        ?) print_help
        ;;
    esac
done

[ $# -eq 3 ] || print_help

cartridge_type="phpmoadmin-1.0"
source "/etc/openshift/openshift-origin-node.conf"
source ${CARTRIDGE_BASE_PATH}/abstract/info/lib/util

setup_embedded_configure "$1" $2 $3

PHPMOADMIN_DIR=$(get_cartridge_instance_dir "$cartridge_type")

if [ ! -f "$APP_HOME/.env/OPENSHIFT_MONGODB_DB_USERNAME" ] ||
   [ ! -f "$APP_HOME/.env/OPENSHIFT_MONGODB_DB_PASSWORD" ] ||
   [ ! -f "$APP_HOME/.env/OPENSHIFT_MONGODB_DB_HOST" ] ||
   [ ! -f "$APP_HOME/.env/OPENSHIFT_MONGODB_DB_TYPE" ] ||
   [ ! -f "$APP_HOME/.env/OPENSHIFT_MONGODB_DB_PORT" ] 
then
   client_error ""
   client_error "MongoDB must be embedded before phpMoAdmin"
   client_error ""
   exit 137
else
   source "$APP_HOME/.env/OPENSHIFT_MONGODB_DB_TYPE"
   if [ $OPENSHIFT_MONGODB_DB_TYPE != "mongodb" ]; then
      client_error ""
      client_error "MongoDB must be embedded before phpMoAdmin"
      client_error ""
      exit 137
   fi
fi

# check that the proxy pass include directory exists
[ -d "/etc/httpd/conf.d/openshift/${uuid}_${namespace}_${application}" ] || error "httpd conf dir not available" 136

#
# Create the core of the application
#
if [ -d "$PHPMOADMIN_DIR" ]
then
    client_error "Embedded phpMoAdmin-1.0 already attached to $application"
    exit 132
fi

create_cartridge_instance_dir "$cartridge_type"
pushd "$PHPMOADMIN_DIR" > /dev/null
mkdir -p conf conf.d logs run sessions tmp html
ln -s /usr/lib64/httpd/modules modules
ln -s /etc/httpd/conf/magic conf/magic

sed -e "s,TEMPLATE_SET_ME_SESSION_SAVE_PATH,$PHPMOADMIN_DIR/sessions/," \
    -e "s,TEMPLATE_SET_ME_UPLOAD_TMP_DIR,$PHPMOADMIN_DIR/tmp/," $CART_CONF_DIR/php.ini > $PHPMOADMIN_DIR/conf/php.ini 

# If password was already generated for phpmoadmin admin user, use it.
if [ -f "$APP_HOME/.env/OPENSHIFT_PHPMOADMIN_PASSWORD" ]; then
   source "$APP_HOME/.env/OPENSHIFT_PHPMOADMIN_PASSWORD"
   password=$OPENSHIFT_PHPMOADMIN_PASSWORD
fi

# Generate a password with no o's O's or 0's
[ -z "$password" ]  &&  password=$(generate_password)

#
# Setup Environment Variables
#
echo "export OPENSHIFT_PHPMOADMIN_USERNAME='admin'" > $APP_HOME/.env/OPENSHIFT_PHPMOADMIN_USERNAME
echo "export OPENSHIFT_PHPMOADMIN_PASSWORD='$password'" > $APP_HOME/.env/OPENSHIFT_PHPMOADMIN_PASSWORD

. $APP_HOME/.env/OPENSHIFT_MONGODB_DB_USERNAME
. $APP_HOME/.env/OPENSHIFT_MONGODB_DB_PASSWORD
. $APP_HOME/.env/OPENSHIFT_MONGODB_DB_HOST
. $APP_HOME/.env/OPENSHIFT_MONGODB_DB_PORT
. $APP_HOME/.env/OPENSHIFT_PHPMOADMIN_USERNAME
. $APP_HOME/.env/OPENSHIFT_PHPMOADMIN_PASSWORD

sed -e "s,TEMPLATE_SET_MONGODB_USERNAME,$OPENSHIFT_MONGODB_DB_USERNAME," \
    -e "s,TEMPLATE_SET_MONGODB_HOST,$OPENSHIFT_MONGODB_DB_HOST," \
    -e "s,TEMPLATE_SET_MONGODB_PASSWORD,$OPENSHIFT_MONGODB_DB_PASSWORD," \
    -e "s,TEMPLATE_SET_MONGODB_PORT,$OPENSHIFT_MONGODB_DB_PORT," \
    -e "s,TEMPLATE_SET_PHPMOADMIN_USERNAME,$OPENSHIFT_PHPMOADMIN_USERNAME," \
    -e "s,TEMPLATE_SET_PHPMOADMIN_PASSWORD,$OPENSHIFT_PHPMOADMIN_PASSWORD," \
    $CART_INFO_DIR/html/moadmin.php > $PHPMOADMIN_DIR/moadmin.php

popd > /dev/null

#
# Find an open localhost IP
#
IP=`embedded_find_open_ip $uid $APP_HOME`

#
# Create simple application specific data
#

$CART_INFO_DIR/bin/deploy_httpd_config.sh $application $uuid $IP

#
# Add config to show disabled pages instead of default apache Forbidden page
#
ln -s $CART_INFO_DIR/configuration/disabled_pages.conf $PHPMOADMIN_DIR/conf.d/disabled_pages.conf

#
# Setup Permissions
#

chown $user_id.$group_id -R $PHPMOADMIN_DIR || error "Failed to chown new phpmoadmin space.  Please contact support" 123
# Secure script and config dirs.
chown root.root -R "$PHPMOADMIN_DIR/conf" "$PHPMOADMIN_DIR/conf.d"
chown root.root "$PHPMOADMIN_DIR"
observe_setup_var_lib_dir "$PHPMOADMIN_DIR"

#
# Create environment variables. This MUST be before starting phpmoadmin as the CTL script relies on these.
#
create_standard_cart_env_vars
create_cart_network_env_vars $IP


#
# Start the server
#
run_as_user "${CARTRIDGE_BASE_PATH}/${cartridge_type}/info/bin/app_ctl.sh start" || error "Failed to start ${application}" 121


#
# Create virtualhost definition for apache
#
$CART_INFO_DIR/bin/deploy_httpd_proxy.sh $application $namespace $uuid $IP

restart_httpd_graceful


# Grab the env vars so we can print them
. $APP_HOME/.env/OPENSHIFT_GEAR_DNS


client_result ""
client_result "phpMoAdmin 1.0 added.  Please make note of these credentials:"
client_result ""
client_result "   PhpMoAdmin User    : $OPENSHIFT_PHPMOADMIN_USERNAME"
client_result "   PhpMoAdmin Password: $OPENSHIFT_PHPMOADMIN_PASSWORD"
client_result ""
client_result "URL: https://$OPENSHIFT_GEAR_DNS/phpmoadmin/"

cart_props "connection_url=https://$OPENSHIFT_GEAR_DNS/phpmoadmin/"
cart_props "username=$OPENSHIFT_PHPMOADMIN_USERNAME"
cart_props "password=$OPENSHIFT_PHPMOADMIN_PASSWORD"

set_app_info "URL: https://$OPENSHIFT_GEAR_DNS/phpmoadmin/"
