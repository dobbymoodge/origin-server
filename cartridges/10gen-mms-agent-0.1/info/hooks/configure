#!/bin/bash

# Creates a rockmongo instance

# Exit on any errors
set -e

function print_help {
    echo "Usage: $0 app-name namespace uuid"

    echo "$0 $@" | logger -p local0.notice -t libra_10gen_mms_agent_configure
    exit 1
}

while getopts 'd' OPTION
do
    case $OPTION in
        d) set -x
        ;;
        ?) print_help
        ;;
    esac
done

[ $# -eq 3 ] || print_help

CART_DIR=${CART_DIR:=/usr/libexec/li/cartridges}
source ${CART_DIR}/abstract/info/lib/util

app_type="10gen-mms-agent-0.1"
setup_embedded_configure "$1" $2 $3

APP_DIR=`echo $APP_HOME/${application} | tr -s /` # ensure that there aren't double /'s
MMS_DIR=`echo $APP_HOME/10gen-mms-agent-0.1 | tr -s /` # ensure that there aren't double /'s
MMS_CTL_SCRIPT="$MMS_DIR/${application}_10gen_mms_agent_ctl.sh"

if [ ! -f "$APP_HOME/.env/OPENSHIFT_NOSQL_DB_USERNAME" ] ||
   [ ! -f "$APP_HOME/.env/OPENSHIFT_NOSQL_DB_PASSWORD" ] ||
   [ ! -f "$APP_HOME/.env/OPENSHIFT_NOSQL_DB_HOST" ] ||
   [ ! -f "$APP_HOME/.env/OPENSHIFT_NOSQL_DB_TYPE" ] ||
   [ ! -f "$APP_HOME/.env/OPENSHIFT_NOSQL_DB_PORT" ] 
then
   client_error ""
   client_error "MongoDB must be embedded before the 10gen MMS Agent"
   client_error ""
   exit 137
else
   source "$APP_HOME/.env/OPENSHIFT_NOSQL_DB_TYPE"
   if [ $OPENSHIFT_NOSQL_DB_TYPE != "mongodb" ]; then
      client_error ""
      client_error "MongoDB must be embedded before the 10gen MMS Agent"
      client_error ""
      exit 137
   fi
fi

#
# Checking if the user has added the settings.py file in the git repo
#
pushd "$APP_HOME" > /dev/null
mkdir -p tmp_${uuid}
cd tmp_${uuid}
git clone $APP_HOME/git/${application}.git/ .

if [ -f ".openshift/mms/settings.py" ]
then
    mkdir -p $APP_DIR/.openshift/mms
    cp .openshift/mms/settings.py $APP_DIR/.openshift/mms/settings.py
fi

popd > /dev/null
rm -rf $APP_HOME/tmp_${uuid}


if [ ! -f "$APP_DIR/.openshift/mms/settings.py" ]
then
    client_error ""
    client_error "Missing settings.py file:  $APP_DIR/.openshift/mms/settings.py"
    client_error "This file is part of the agent zip file: 10gen-mms-agent-<group-name>.zip"
    client_error "The zip file is available to download from https://mms.10gen.com/ after you register with their service. "
    client_error "It contains your 10gen MMS credentials and is required for running the agent."
    client_error "You will need to add this file and then do a git commit and push before you can embed the 10gen-mms-agent-0.1 cartridge."
    client_error ""
    exit 137
fi

#
# Create the core of the application
#
if [ -d "$MMS_DIR" ]
then
    client_error "Embedded 10gen-mms-agent-0.1 already attached to $application"
    exit 132
fi

mkdir -p "$MMS_DIR"
pushd "$MMS_DIR" > /dev/null
mkdir -p logs mms-agent run
cp -r /usr/local/share/mms-agent/* $MMS_DIR/mms-agent/
ln -s agent.py $MMS_DIR/mms-agent/"$uuid"_agent.py

#
# Create symbolic links to the settings.py file and remove the compiled files.
# This is required so that the user can set the credentials in this file
#
rm -f $MMS_DIR/mms-agent/settings.py $MMS_DIR/mms-agent/settings.pyc $MMS_DIR/mms-agent/settings.pyo

# The $APP_HOME/${application}/.openshift/mms directory will be created by the user
# and the settings.py file will be placed there by the user too.
# mkdir -p $APP_HOME/${application}/.openshift/mms
# cp /usr/local/share/mms-agent/settings.py $APP_DIR/.openshift/mms/settings.py
ln -s $APP_DIR/.openshift/mms/settings.py $MMS_DIR/mms-agent/settings.py
chown $user_id.$group_id -R $APP_HOME/${application}/.openshift

popd > /dev/null


#
# Create simple 10gen-mms-agent start / stop script
#
ln -s $CART_INFO_DIR/bin/10gen_mms_agent_ctl.sh $MMS_CTL_SCRIPT

#
# Setup Permissions
#
chown $user_id.$group_id -R $MMS_DIR || error "Failed to chown new 10gen-mms-agent space.  Please contact support" 123
chown root.root "$MMS_DIR"
chcon -t libra_var_lib_t -l $mcs_level -R "$MMS_DIR"

#
# Create environment variables. This MUST be before starting rockmongo as the CTL script relies on these.
#
echo "export OPENSHIFT_10GEN_MMS_AGENT_APP_DIR='$MMS_DIR/'" > $APP_HOME/.env/OPENSHIFT_10GEN_MMS_AGENT_APP_DIR
echo "export OPENSHIFT_10GEN_MMS_AGENT_CTL_SCRIPT='$MMS_CTL_SCRIPT'" > $APP_HOME/.env/OPENSHIFT_10GEN_MMS_AGENT_CTL_SCRIPT

#
# Start the server
#
runuser --shell /bin/sh "$uuid" -c "runcon -t libra_t -l $mcs_level $MMS_CTL_SCRIPT start" || error "Failed to start ${application}" 121

client_result ""
client_result "10gen-mms-agent-0.1 added. " 
client_result "Please configure your mongodb host at https://mms.10gen.com/ to start monitoring performance data."
client_result ""
client_result "Monitoring URL: https://mms.10gen.com/"

set_app_info "Monitoring URL: https://mms.10gen.com/"
