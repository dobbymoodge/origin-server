#!/bin/bash

# Copyright © 2010 Mike McGrath All rights reserved
# Copyright © 2010 Red Hat, Inc. All rights reserved

# This copyrighted material is made available to anyone wishing to use, modify,
# copy, or redistribute it subject to the terms and conditions of the GNU
# General Public License v.2.  This program is distributed in the hope that it
# will be useful, but WITHOUT ANY WARRANTY expressed or implied, including the
# implied warranties of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.  You should have
# received a copy of the GNU General Public License along with this program;
# if not, write to the Free Software Foundation, Inc., 51 Franklin Street,
# Fifth Floor, Boston, MA 02110-1301, USA. Any Red Hat trademarks that are
# incorporated in the source code or documentation are not subject to the GNU
# General Public License and may only be used or replicated with the express
# permission of Red Hat, Inc.

# Creates a per application httpd instance

# Exit on any errors
set -e

if [ -f '/etc/libra/node.conf' ]
then
    . /etc/libra/node.conf
elif [ -f 'node.conf' ]
then
    . node.conf
else
    echo "node.conf not found.  Cannot continue" 1>&2
    exit 3
fi

if [ -f '/etc/libra/node_data.conf' ]
then
    . /etc/libra/node_data.conf
elif [ -f 'node_data.conf' ]
then
    . node_data.conf
else
    echo "node_data.conf not found.  Cannot continue" 1>&2
    exit 3
fi

rotatelogs_interval="86400"
rotatelogs_format="-%Y%m%d-%H%M%S-%Z"

if [ -f '/etc/libra/resource_limits.conf' ]
then
    . /etc/libra/resource_limits.conf
fi


CART_DIR=/usr/libexec/li/cartridges
CART_INFO_DIR=$CART_DIR/php-5.3/info
CART_CONF_DIR=$CART_INFO_DIR/configuration/etc/conf

function print_help {
    echo "Usage: $0 app-name namespace uuid"

    echo "$0 $@" | logger -p local0.notice -t libra_php_configure
    exit 1
}

function error {
    echo "$1" 1>&2
    exit "$2"
}

while getopts 'd' OPTION
do
    case $OPTION in
        d) set -x
        ;;
        ?) print_help
        ;;
    esac
done


[ $# -eq 3 ] || print_help

namespace=`basename $2`
application="$1"
uuid=$3

APP_HOME="$libra_dir/$uuid"
APP_DIR=`echo $APP_HOME/$application | tr -s /`

${CART_DIR}/li-controller/info/bin/unobfuscate_app_home $uuid $namespace $application

#
# Get user id info
# Not caching this information caused some early chowns to work but some later
# chowns to fail with a user not found error

user_id=$(id -u "$uuid") || error "Could not find user $uuid ($namespace)" 134
group_id=$(id -g "$uuid") || error "Could not find user $uuid ($namespace)" 135

#
# Create git app repo
#
uid=$(id -u "$uuid")
mcs_level=`${CART_DIR}/li-controller/info/bin/mcs_level $uid`
export CART_INFO_DIR
${CART_DIR}/li-controller/info/bin/clone_git_repo $application $user_id $group_id $uuid "php 5.3"
GIT_DIR=$APP_HOME/git/$application.git


#
# Create http base for application, every app gets its own apache instance
#

[ -d "$APP_DIR" ] && error "${application}.  Please destroy then recreate, or pick a new name" 132

mkdir -p "$APP_DIR"
pushd "$APP_DIR" > /dev/null
mkdir conf conf.d logs run repo sessions data tmp
mkdir -p phplib/pear/{docs,ext,php,cache,cfg,data,download,temp,tests,www}
ln -s /usr/lib64/httpd/modules modules
ln -s /etc/httpd/conf/magic conf/magic
sed -e "s,TEMPLATE_SET_ME_SESSION_SAVE_PATH,$APP_DIR/sessions/," \
    -e "s,TEMPLATE_SET_ME_UPLOAD_TMP_DIR,$APP_DIR/tmp/," $CART_CONF_DIR/php.ini > $APP_DIR/conf/php.ini 
popd > /dev/null

#
# Find an open localhost IP
#
IP=`${CART_DIR}/li-controller/info/bin/find_open_ip $uid $uuid`

#
# Create simple application specific data
#

cat <<EOF > "$APP_DIR/conf.d/libra.conf"
ServerRoot "$APP_DIR"
DocumentRoot "$APP_DIR/repo/php"
Listen $IP:8080
User $uuid
Group $uuid
ErrorLog "|/usr/sbin/rotatelogs $APP_DIR/logs/error_log$rotatelogs_format $rotatelogs_interval"
CustomLog "|/usr/sbin/rotatelogs $APP_DIR/logs/access_log$rotatelogs_format $rotatelogs_interval" combined
php_value include_path ".:$APP_DIR/repo/libs/:$APP_DIR/phplib/pear/pear/php/:/usr/share/pear/"
# TODO: Adjust from ALL to more conservative values
<Directory "$APP_DIR/repo/php">
  AllowOverride All
</Directory>

<IfModule !mod_bw.c>
    LoadModule bw_module    modules/mod_bw.so
</IfModule>

<ifModule mod_bw.c>
  BandWidthModule On
  ForceBandWidthModule On
  BandWidth $apache_bandwidth
  MaxConnection $apache_maxconnection
  BandWidthError $apache_bandwidtherror
</IfModule>

EOF

#
# Create simple application start / stop script
#
cat <<EOF > "$APP_DIR/${application}_ctl.sh"
#!/bin/bash -e

# Import Environment Variables
for f in ~/.env/*
do
    . \$f
done

app_ctl.sh \$1
EOF

# Pear requires a special pearrc file, this is that file:
pear config-create "$APP_DIR"/phplib/pear/ "$APP_HOME"/.pearrc
pear -c "$APP_HOME"/.pearrc config-set php_ini "$APP_DIR"/conf/php.ini

#
# Populate repo
#
GIT_DIR="$GIT_DIR" git archive --format=tar HEAD | (cd "${APP_DIR}/repo" && tar --warning=no-timestamp -xf -)

chmod +x "$APP_DIR/${application}_ctl.sh" || error "Failed to chmod new application scripts" 122
chown $user_id.$group_id -R $APP_DIR || error "Failed to chown new application space.  Please contact support" 123
# Secure script and config dirs.
chown root.root -R "$APP_DIR/${application}_ctl.sh" "$APP_DIR/conf" "$APP_DIR/conf.d"
chown root.root "$APP_DIR"
chcon -t libra_var_lib_t -l $mcs_level -R "$APP_HOME/git/" "$APP_DIR"

#
# Create environment variables
#
echo "export OPENSHIFT_APP_DIR='$APP_DIR/'" > $APP_HOME/.env/OPENSHIFT_APP_DIR
echo "export OPENSHIFT_REPO_DIR='$APP_DIR/repo/'" > $APP_HOME/.env/OPENSHIFT_REPO_DIR
echo "export OPENSHIFT_INTERNAL_IP='$IP'" > $APP_HOME/.env/OPENSHIFT_INTERNAL_IP
echo "export OPENSHIFT_INTERNAL_PORT='8080'" > $APP_HOME/.env/OPENSHIFT_INTERNAL_PORT
echo "export OPENSHIFT_LOG_DIR='$APP_DIR/logs/'" > $APP_HOME/.env/OPENSHIFT_LOG_DIR
echo "export OPENSHIFT_DATA_DIR='$APP_DIR/data/'" > $APP_HOME/.env/OPENSHIFT_DATA_DIR
echo "export OPENSHIFT_TMP_DIR='/tmp/'" > $APP_HOME/.env/OPENSHIFT_TMP_DIR
echo "export OPENSHIFT_RUN_DIR='$APP_DIR/run/'" > $APP_HOME/.env/OPENSHIFT_RUN_DIR
echo "export OPENSHIFT_APP_NAME='$application'" > $APP_HOME/.env/OPENSHIFT_APP_NAME
echo "export OPENSHIFT_APP_TYPE='php-5.3'" > $APP_HOME/.env/OPENSHIFT_APP_TYPE
echo "export OPENSHIFT_APP_CTL_SCRIPT='$APP_DIR/${application}_ctl.sh'" > $APP_HOME/.env/OPENSHIFT_APP_CTL_SCRIPT
echo "export OPENSHIFT_APP_DNS='${application}-${namespace}.${libra_domain}'" > $APP_HOME/.env/OPENSHIFT_APP_DNS
echo "export PATH=$CART_INFO_DIR/bin/:$CART_DIR/abstract-httpd/info/bin/:$CART_DIR/li-controller/info/bin/:$PATH" > $APP_HOME/.env/PATH

#
# Start the server
#
runuser --shell /bin/sh "$uuid" -c "runcon -t libra_t -l $mcs_level $APP_DIR/${application}_ctl.sh start" || error "Failed to start ${application}" 121
#GIT_DIR="$GIT_DIR" runuser --shell /bin/sh "$uuid" -c "runcon -t libra_t -l $mcs_level $GIT_DIR/hooks/post-receive" || error "Failed to start ${application}" 121

#
# Create virtualhost definition for apache
#
export CART_INFO_DIR
$CART_DIR/abstract-httpd/info/bin/deploy_httpd_proxy.sh $application $namespace $uuid $IP

/sbin/service httpd configtest 2> /dev/null && /sbin/service httpd graceful || error "Failed to restart master httpd, please contact support" 120

