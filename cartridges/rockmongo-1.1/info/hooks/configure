#!/bin/bash

# Creates a rockmongo instance

# Exit on any errors
set -e

function print_help {
    echo "Usage: $0 app-name namespace uuid"

    echo "$0 $@" | logger -p local0.notice -t openshift_origin_rockmongo_configure
    exit 1
}

while getopts 'd' OPTION
do
    case $OPTION in
        d) set -x
        ;;
        ?) print_help
        ;;
    esac
done

[ $# -eq 3 ] || print_help

cartridge_type="rockmongo-1.1"
source "/etc/openshift/node.conf"
source ${CARTRIDGE_BASE_PATH}/abstract/info/lib/util

CART_INFO_DIR=${CARTRIDGE_BASE_PATH}/embedded/$cartridge_type/info

setup_embedded_configure "$1" $2 $3
import_env_vars

ROCKMONGO_DIR=$(get_cartridge_instance_dir "$cartridge_type")

databases=$(get_attached_databases)
if ! echo "$databases" |grep -q 'mongodb'
then
   client_error ""
   client_error "MongoDB must be embedded before rockmongo."
   client_error ""
   exit 137
fi

#
# Create the core of the application
#
if [ -d "$ROCKMONGO_DIR" ]
then
    client_error "Embedded rockmongo-1.1 already attached to $application"
    exit 132
fi

create_cartridge_instance_dir "$cartridge_type"
pushd "$ROCKMONGO_DIR" > /dev/null
mkdir -p conf conf.d logs run sessions tmp html rockmongo
ln -s /usr/lib64/httpd/modules modules
ln -s /etc/httpd/conf/magic conf/magic

sed -e "s,TEMPLATE_SET_ME_SESSION_SAVE_PATH,$ROCKMONGO_DIR/sessions/," \
    -e "s,TEMPLATE_SET_ME_UPLOAD_TMP_DIR,$ROCKMONGO_DIR/tmp/," $CART_CONF_DIR/php.ini > $ROCKMONGO_DIR/conf/php.ini 

#
# Setup Environment Variables
#

. $APP_HOME/.env/OPENSHIFT_MONGODB_DB_USERNAME
. $APP_HOME/.env/OPENSHIFT_MONGODB_DB_PASSWORD
. $APP_HOME/.env/OPENSHIFT_MONGODB_DB_HOST
. $APP_HOME/.env/OPENSHIFT_MONGODB_DB_PORT

cp -r $CART_INFO_DIR/rockmongo/* $ROCKMONGO_DIR/rockmongo/
sed -e "s,TEMPLATE_SET_MONGODB_HOST,$OPENSHIFT_MONGODB_DB_HOST," \
    -e "s,TEMPLATE_SET_MONGODB_PORT,$OPENSHIFT_MONGODB_DB_PORT," \
    $CART_INFO_DIR/rockmongo/config.php > $ROCKMONGO_DIR/rockmongo/config.php

popd > /dev/null

#
# Find an open localhost IP
#
IP=`embedded_find_open_ip $uid $APP_HOME`

#
# Create simple application specific data
#

$CART_INFO_DIR/bin/deploy_httpd_config.sh $application $uuid $IP


#
# Setup Permissions
#

chown $user_id.$group_id -R $ROCKMONGO_DIR || error "Failed to chown new rockmongo space.  Please contact support" 123
# Secure script and config dirs.
chown root.root -R "$ROCKMONGO_DIR/conf" "$ROCKMONGO_DIR/conf.d"
chown root.root "$ROCKMONGO_DIR"
observe_setup_var_lib_dir "$ROCKMONGO_DIR"


#
# Create environment variables. This MUST be before starting rockmongo as the CTL script relies on these.
#
create_standard_cart_env_vars
create_cart_network_env_vars $IP


#
# Start the server
#
run_as_user "${CARTRIDGE_BASE_PATH}/${cartridge_type}/info/bin/app_ctl.sh start" || error "Failed to start ${application}" 121


#
# Create virtualhost definition for apache
#
$CART_INFO_DIR/bin/deploy_httpd_proxy.sh $application $namespace $uuid $IP


# Grab the env vars so we can print them
. $APP_HOME/.env/OPENSHIFT_GEAR_DNS


client_result ""
client_result "rockmongo-1.1 added.  Please make note of these MongoDB credentials again:"
client_result ""
client_result "   RockMongo User    : $OPENSHIFT_MONGODB_DB_USERNAME"
client_result "   RockMongo Password: $OPENSHIFT_MONGODB_DB_PASSWORD"
client_result ""
client_result "URL: https://$OPENSHIFT_GEAR_DNS/rockmongo/"

cart_props "connection_url=https://$OPENSHIFT_GEAR_DNS/rockmongo/"

set_app_info "URL: https://$OPENSHIFT_GEAR_DNS/rockmongo/"
