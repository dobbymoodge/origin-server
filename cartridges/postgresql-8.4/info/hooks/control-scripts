#!/bin/bash

# Copyright © 2011 Ram Ranganathan All rights reserved
# Copyright © 2010 Red Hat, Inc. All rights reserved

# This copyrighted material is made available to anyone wishing to use, modify,
# copy, or redistribute it subject to the terms and conditions of the GNU
# General Public License v.2.  This program is distributed in the hope that it
# will be useful, but WITHOUT ANY WARRANTY expressed or implied, including the
# implied warranties of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.  You should have
# received a copy of the GNU General Public License along with this program;
# if not, write to the Free Software Foundation, Inc., 51 Franklin Street,
# Fifth Floor, Boston, MA 02110-1301, USA. Any Red Hat trademarks that are
# incorporated in the source code or documentation are not subject to the GNU
# General Public License and may only be used or replicated with the express
# permission of Red Hat, Inc.

# Control application's embedded PostgreSQL server instance
CART_NAME=postgresql
CART_VERSION=8.4
CART_DIRNAME=${CART_NAME}-$CART_VERSION
CART_INSTALL_DIR=/usr/libexec/li/cartridges

# Exit on any errors
set -e


function print_help() {
    cmd=$(basename "$0")
    echo "Usage: $0 app-name namespace uuid"
    echo "$cmd embedded PostgreSQL service"

    echo "$0 $@" | logger -p local0.notice -t libra_postgresql_$cmd
    exit 1

}  #  End of function  print_help.


function _control_postgres_service() {
   [ $# -lt 1 ]  &&  return 1
   ctl_cmd="runcon -t libra_t -l $mcs_level $CTL_SCRIPT $1"
   /bin/su -s /bin/sh "$uuid" -c "$ctl_cmd"

}  #  End of function  _control_postgres_service.


function start_postgres_service() {
   rm -f "$CART_INSTANCE_DIR/run/stop_lock"
   _control_postgres_service "start"

}  #  End of function  start_postgres_service.


function stop_postgres_service() {
   _control_postgres_service "stop"
   touch "$CART_INSTANCE_DIR/run/stop_lock"

}  #  End of function  stop_postgres_service.


function restart_postgres_service() {
   rm -f "$CART_INSTANCE_DIR/run/stop_lock"
   _control_postgres_service "restart"

}  #  End of function  restart_postgres_service.


function reload_postgres_service() {
   #  Do nothing.

}  #  End of function  reload_postgres_service.


function move_postgres_service() {
   source ${CART_INSTALL_DIR}/abstract/info/lib/selinux
   source ${CART_INSTALL_DIR}/abstract/info/lib/apache
   source ${CART_INSTALL_DIR}/abstract/info/lib/network
   load_node_conf

}  #  End of function  move_postgres_service.



#
# main():
#
source ${CART_INSTALL_DIR}/abstract/info/lib/util

# Parse and ensure arguments.
while getopts 'd' OPTION
do
    case $OPTION in
        d) set -x ;;
        ?) print_help ;;
    esac
done

[ $# -eq 3 ] || print_help
setup_basic_hook "$1" $2 $3

# Setup instance directory and control script name.
CART_INSTANCE_DIR="$APP_HOME/$CART_DIRNAME"
CTL_SCRIPT="$CART_INSTANCE_DIR/${application}_${CART_NAME}_ctl.sh"

cmd=$(basename "$0")
case "$cmd" in
   status)  runuser --shell /bin/sh "$uuid" "$CTL_SCRIPT" status ;;
   start)   start_postgres_service   ;;
   stop)    stop_postgres_service    ;;
   restart) restart_postgres_service ;;
   reload)  reload_postgres_service  ;;
   reload)  move_postgres_service    ;;
esac

