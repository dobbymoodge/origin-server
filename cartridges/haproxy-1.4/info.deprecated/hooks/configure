#!/bin/bash

# Creates a haproxy instance

# Exit on any errors
set -e

function print_help {
    echo "Usage: $0 app-name namespace uuid"

    echo "$0 $@" | logger -p local0.notice -t stickshift_haproxy_configure
    exit 1
}

while getopts 'd' OPTION
do
    case $OPTION in
        d) set -x
        ;;
        ?) print_help
        ;;
    esac
done


[ $# -eq 3 ] || print_help

source /etc/stickshift/stickshift-node.conf

app_type="haproxy-1.4"

source ${CARTRIDGE_BASE_PATH}/abstract/info/lib/util

CART_INFO_DIR=${CARTRIDGE_BASE_PATH}/haproxy-1.4/info

setup_configure "$1" $2 $3

unobfuscate_app_home $uuid $namespace $application

clone_git_repo $application $user_id $group_id $uuid "haproxy 1.4"

#
# Create the core of the application
#

mkdir -p "$APP_DIR"
pushd "$APP_DIR" > /dev/null
create_standard_app_dirs
mkdir -p conf conf.d logs sessions
ln -s /usr/lib64/httpd/modules modules
ln -s /etc/httpd/conf/magic conf/magic
touch conf/gear-registry.git
#sed -e "s,TEMPLATE_SET_ME_SESSION_SAVE_PATH,$APP_DIR/sessions/," \
#    -e "s,TEMPLATE_SET_ME_UPLOAD_TMP_DIR,$APP_DIR/tmp/," $CART_CONF_DIR/php.ini > $APP_DIR/conf/php.ini 
popd > /dev/null

#
# Find an open localhost IP
#
IP=`find_open_ip $uid $uuid`

create_app_ctl_script

populate_repo_dir

secure_app_dir

secure_conf_dirs

observe_setup_app_and_git_dirs

#
# Create environment variables
#
create_standard_env_vars
create_standard_network_env_vars
create_standard_repo_dir_env_var
create_standard_path_env_var


export IP2=`embedded_find_open_ip $uid "$APP_DIR/../"`
echo "export OPENSHIFT_HAPROXY_STATUS_IP='$IP'" > "$APP_DIR/../.env/OPENSHIFT_HAPROXY_STATUS_IP"
$CART_INFO_DIR/bin/deploy_httpd_config.sh $application $uuid $IP
mkdir ${GEAR_BASE_DIR}/${uuid}/.openshift
chown ${uuid} ${GEAR_BASE_DIR}/${uuid}/.openshift $APP_DIR/conf/gear-registry.git

#
# Start the server
#
start_app

#
# Create virtualhost definition for apache
#
$CART_INFO_DIR/bin/deploy_httpd_proxy.sh $application $namespace $uuid $IP

restart_httpd_graceful
