#!/bin/bash

# Copyright © 2010 Mike McGrath All rights reserved
# Copyright © 2010 Red Hat, Inc. All rights reserved

# This copyrighted material is made available to anyone wishing to use, modify,
# copy, or redistribute it subject to the terms and conditions of the GNU
# General Public License v.2.  This program is distributed in the hope that it
# will be useful, but WITHOUT ANY WARRANTY expressed or implied, including the
# implied warranties of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.  You should have
# received a copy of the GNU General Public License along with this program;
# if not, write to the Free Software Foundation, Inc., 51 Franklin Street,
# Fifth Floor, Boston, MA 02110-1301, USA. Any Red Hat trademarks that are
# incorporated in the source code or documentation are not subject to the GNU
# General Public License and may only be used or replicated with the express
# permission of Red Hat, Inc.

# Creates an instance of a raw app

# Exit on any errors
set -e
#set -x

if [ -f '/etc/libra/node.conf' ]
then
    . /etc/libra/node.conf
elif [ -f 'node.conf' ]
then
    . node.conf
else
    echo "node.conf not found.  Cannot continue" 1>&2
    exit 3
fi

if [ -f '/etc/libra/node_data.conf' ]
then
    . /etc/libra/node_data.conf
elif [ -f 'node_data.conf' ]
then
    . node_data.conf
else
    echo "node_data.conf not found.  Cannot continue" 1>&2
    exit 3
fi

rotatelogs_interval="86400"
rotatelogs_format="-%Y%m%d-%H%M%S-%Z"

if [ -f '/etc/libra/resource_limits.conf' ]
then
    . /etc/libra/resource_limits.conf
fi


CART_DIR=/usr/libexec/li/cartridges
CART_INFO_DIR=$CART_DIR/raw-0.1/info

source ${CART_DIR}/li-controller/info/lib/util
source ${CART_DIR}/li-controller/info/lib/selinux
source ${CART_DIR}/li-controller/info/lib/git
source ${CART_DIR}/li-controller/info/lib/apache

function print_help {
    echo "Usage: $0 app-name namespace uuid"

    echo "$0 $@" | logger -p local0.notice -t libra_raw_configure
    exit 1
}

while getopts 'd' OPTION
do
    case $OPTION in
        d) set -x
        ;;
        ?) print_help
        ;;
    esac
done


[ $# -eq 3 ] || print_help

namespace=`basename $2`
application="$1"
uuid=$3

APP_HOME="$libra_dir/$uuid"
APP_DIR=`echo $APP_HOME/$application | tr -s /`

unobfuscate_app_home $uuid $namespace $application

#
# Get user id info
# Not caching this information caused some early chowns to work but some later
# chowns to fail with a user not found error

user_id=$(id -u "$uuid") || error "Could not find user $uuid ($namespace)" 134
group_id=$(id -g "$uuid") || error "Could not find user $uuid ($namespace)" 135

#
# Create git app repo
#
uid=$(id -u "$uuid")
mcs_level=`openshift_mcs_level $uid`
clone_git_repo $application $user_id $group_id $uuid "raw 0.1"
GIT_DIR=$APP_HOME/git/$application.git


#
# Create http base for application, every app gets its own apache instance
#

[ -d "$APP_DIR" ] && error "${application}.  Please destroy then recreate, or pick a new name" 132

mkdir -p "$APP_DIR"
pushd "$APP_DIR" > /dev/null
mkdir logs run repo data tmp
popd > /dev/null

populate_repo_dir "repo"

secure_app_dir

chcon_app_dir_and_git

#
# Create environment variables
#
create_standard_env_vars
create_standard_redo_dir_env_var
create_standard_path_env_var
echo "export OPENSHIFT_APP_TYPE='raw-0.1'" > $APP_HOME/.env/OPENSHIFT_APP_TYPE
echo "export OPENSHIFT_APP_CTL_SCRIPT='/bin/true'" > $APP_HOME/.env/OPENSHIFT_APP_CTL_SCRIPT

#
# Create virtualhost definition for apache
#
export CART_INFO_DIR
$CART_INFO_DIR/bin/deploy_httpd_proxy.sh $application $namespace $uuid

restart_httpd_graceful

