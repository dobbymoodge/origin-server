#!/bin/bash

# Control the application's jobs scheduling service (cron)
CART_NAME=cron
CART_VERSION=1.4
CART_DIRNAME=${CART_NAME}-$CART_VERSION
CART_DIR=${CART_DIR:=/usr/libexec/li/cartridges}


# Exit on any errors
set -e


function print_help() {
    cmd=$(basename "$0")
    echo "Usage: $0 app-name namespace uuid"
    echo "$cmd embedded cron service"

    echo "$0 $@" | logger -p local0.notice -t libra_cron_$cmd
    exit 1

}  #  End of function  print_help.


function _control_cron_service() {
   [ $# -lt 1 ]  &&  return 1
   ctl_cmd="runcon -t libra_t -l $mcs_level $CTL_SCRIPT $1"
   /bin/su -s /bin/sh "$uuid" -c "$ctl_cmd"

}  #  End of function  _control_cron_service.


function _enable_cron_service() {
   rm -f "$CART_INSTANCE_DIR/run/stop_lock"
   _control_cron_service "enable"

}  #  End of function  _enable_cron_service.


function _disable_cron_service() {
   _control_cron_service "disable"
   touch "$CART_INSTANCE_DIR/run/stop_lock"

}  #  End of function  _disable_cron_service.


function _reenable_cron_service() {
   rm -f "$CART_INSTANCE_DIR/run/stop_lock"
   _control_cron_service "reenable"

}  #  End of function  _reenable_cron_service.


function _reload_cron_service() {
   :  #  Do nothing.
}  #  End of function  _reload_cron_service.


function _move_cron_service() {
   source ${CART_DIR}/abstract/info/lib/selinux
   source ${CART_DIR}/abstract/info/lib/apache
   source ${CART_DIR}/abstract/info/lib/network
   load_node_conf
   
   CRON_DIR="$APP_HOME/cron-1.4/"
   
   chcon -t libra_var_lib_t -l $mcs_level -R "$CRON_DIR"

}  #  End of function  _move_cron_service.

function _pre_move_cron_service() {
   source ${CART_DIR}/abstract/info/lib/selinux
   source ${CART_DIR}/abstract/info/lib/apache
   source ${CART_DIR}/abstract/info/lib/network
   load_node_conf

}  #  End of function  _pre_move_cron_service.

function _post_move_cron_service() {
   source ${CART_DIR}/abstract/info/lib/selinux
   source ${CART_DIR}/abstract/info/lib/apache
   source ${CART_DIR}/abstract/info/lib/network
   load_node_conf

}  #  End of function  _post_move_cron_service.



#
# main():
#
source ${CART_DIR}/abstract/info/lib/util

# Parse and ensure arguments.
while getopts 'd' OPTION
do
    case $OPTION in
        d) set -x ;;
        ?) print_help ;;
    esac
done

[ $# -eq 3 ] || print_help
setup_basic_hook "$1" $2 $3

# Setup instance directory and control script name.
CART_INSTANCE_DIR="$APP_HOME/$CART_DIRNAME"
CTL_SCRIPT="$CART_INSTANCE_DIR/${application}_${CART_NAME}_ctl.sh"

cmd=$(basename "$0")
case "$cmd" in
   status)           runuser --shell /bin/sh "$uuid" "$CTL_SCRIPT" status ;;
   start|enable)     _enable_cron_service     ;;
   stop|disable)     _disable_cron_service    ;;
   restart|reenable) _reenable_cron_service   ;;
   reload)           _reload_cron_service     ;;
   move)             _move_cron_service       ;;
   pre-move)         _pre_move_cron_service   ;;
   post-move)        _post_move_cron_service  ;;
esac

