#!/usr/bin/env ruby

$:.unshift(File.dirname(__FILE__) + '/../lib')
require 'rubygems'
require 'libra'
require 'mcollective'

include MCollective::RPC
include Libra

options = rpcoptions do |parser, options|
    parser.define_head "Control libra agent"
    parser.banner = "Usage: mc-rhc-cartridge-do [options]"

    parser.on('-a', '--action ACTION', 'Action to call') do |action|
      options[:action] = action
    end

    parser.on('-c', '--cartridge CARTRIDGE', 'Cartridge (e.g. php-5.3.2, rack-1.1.0)') do |cartridge|
      options[:cartridge] = cartridge
    end

    parser.on('-n', '--app APP', 'Application name') do |app_name|
      options[:app_name] = app_name
    end

    parser.on('-l', '--rhlogin RHLOGIN', 'Account to act on') do |rhlogin|
      options[:rhlogin] = rhlogin
    end

end

unless options.include?(:cartridge) or options[:cartridge] =~ /^(php-5.3.2|rack-1.1.0)$/
    puts "You need to specify a proper cartridge:"
    puts "php-5.3.2"
    puts "rack-1.1.0"
    exit 254
end

unless options.include?(:action) or options[:action] =~ /^(configure|deconfigure|info|post-install|post_remove|pre-install|reload|restart|start|status|stop)$/
    puts "Specify supported action:"
    puts "configure,deconfigure,info,post-install,post_remove,pre-install,reload,restart,start,status,stop"
    exit 253
end

unless options.include?(:app_name) or options[:app_name] =~ /^.+$/
    puts "Specify app name"
    exit 252
end

unless options.include?(:rhlogin) or !(options[:rhlogin] =~ /["\$\^<>\|%\/;:,\\\*=~]/)
    puts "Specify rhlogin"
    exit 251
end

# Set the MCollective options
Libra.c[:rpc_opts] = options

# Execute the options on a Libra framework
Libra.execute(options[:cartridge], options[:action], options[:app_name], options[:rhlogin])