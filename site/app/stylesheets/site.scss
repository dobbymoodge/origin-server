/*
  Draft CSS for the site

  Notes:

  $gridGutterWidth changes based on responsive layout - we need to have a single responsive style
  per element that depends on it (maybe define $gridGutterWidthLarge and use it in responsive.scss)

  SASS 3.0 doesn't support inlining media queries - we need to upgrade

  Navbar markup seems to be correct, but needs lots of love at smaller resolutions

  Continue to pull out variables

  Simplify login link behavior - lots of styles for fairly simple markup

*/


@import "variables";
@import "bootstrap/variables";
@import "bootstrap/mixins";
@import "ribbon";

@import "navbar";
@import "community";

/* move into core when the branding converges */
a { color: $ribbonFoldColor; }
a:hover, a:active { color: $ribbonColor; }

/* Hitch a div out of its parent */
.lift {
  margin-top: -90px;
}
.lift-less {
  margin-top: -80px;
}
// Apply to the appropriate element above a lifted item
.lift-counter {
  padding-bottom: 90px;
}
@media (max-width: 767px) {
  .lift,
  .lift-less {
    margin-top: 0;
  }
}

/* A link that is a block, similar to a thumbnail */
@mixin tile($activeColor, $hoverColor, $backgroundActiveColor, $backgroundHoverColor) {
  display: block;
  text-decoration: none;

  &:hover { 
    text-decoration: none; 
    color: $hoverColor; 
    background-color: $backgroundHoverColor;
    background: -moz-repeating-linear-gradient(-180deg, $backgroundHoverColor 6px, transparentize($backgroundHoverColor, 1.0) 6px, transparentize($backgroundHoverColor, 1.0) 10px, $backgroundHoverColor 10px, $backgroundHoverColor) repeat scroll 0 0 transparent;
  }
  &:active {
    text-decoration: none; 
    color: $activeColor; 
    background-color: $backgroundActiveColor;
  }
}

// Temporary
body.signup { 
  background-color: $navBackgroundColor; 
}

// Concrete sections of pages
.section-top {
  background-color: $topBarBackgroundColor; 
  color: white;
}
.section-nav {
  background-color: $navBackgroundColor; 
  color: white;
  padding-bottom: 50px;
}
.section-nav.lift-counter {
  padding-bottom: 90px;
}
@media (max-width: 767px) {
  .section-nav.lift-counter {
    padding-bottom: 30px;
  }
}

.section-striped {
  background: -moz-repeating-linear-gradient(-70deg, #e6e6e6, #e6e6e6 6px, #e4e4e4 9px, #e4e4e4 15px, #e6e6e6 18px) repeat scroll 0 0 transparent;

  .link-tile {
    color: #343434;
    padding: 15px $gridGutterWidth;
    @include tile(#343434, #343434, $ribbonFoldColor, #ccc);

    > :last-child { margin-bottom: 0; }
  }
}
@media (max-width: 768px) {
  .section-striped .link-tile { padding: 10px $gridGutterWidthPhone; }
}
@if $gridGutterWidthTablet != $gridGutterWidth { @media (min-width: 768px) and (max-width: 979px) {
  .section-striped .link-tile { padding: 10px $gridGutterWidthTablet; }
} }
@if $gridGutterWidthLarge != $gridGutterWidth { @media (min-width: 1200px) {
  .section-striped .link-tile { padding: 15px $gridGutterWidthLarge; }
} }

.section-striped.lift-counter {
  padding-bottom: 130px;
}
@media (max-width: 767px) {
  .section-striped.lift-counter {
    padding-bottom: 30px;
  }
}

.section-base {
  background-color: $navBackgroundColor;
}

// Top bar
.section-top > .container {
  > div {
    padding: 8px 0;
    > a {
      color: $signupLinkColor;
      font-weight: bold;
      text-transform: uppercase;
    }
    > a:hover {
      text-decoration: none;
      color: white;
    }
  }
  > .login {
    padding: 5px 0;
  }
}

// Central messaging content
.messaging {
  clear: both;

  color: #bbb;
  text-align: center;

  margin-bottom: 30px;

  .primary {
    font-size: 40px;
    line-height: 40px;
    text-transform: uppercase;
  }

  strong {
    color: white;
  }
  .secondary {
    font-size: 16px;
    line-height: 18px;
  }
}

@media (max-width: 767px) {
  .messaging {
    text-align: left;
    margin-bottom: 10px;

    .primary {
      font-size: 20px;
      line-height: 20px;
    }
    .secondary {
      font-size: 13px;
      line-height: 18px;
    }
  }
}

.take-action {
  display: table !important; // override span12 CSS rules

  &:hover, &:active {
    text-decoration: none;
    color: white;
  }

  > div {
    display: table-cell;
    padding: 20px $gridGutterWidth;
    text-align: left;
    vertical-align: middle;

    text-transform: uppercase;
    font-weight: bold;
    font-size: 20px;
    line-height: 21px;
    letter-spacing: 1px;

    color: white;
    background-color: $ribbonColor;
  }

  > div:last-child {
    white-space: nowrap;
    background-color: $ribbonFoldColor;
    padding-right: $gridGutterWidth + 12px;
    background: url('../images/arrow-large.gif') 87% center no-repeat $ribbonFoldColor;
    -moz-transition: background-position 0.2s;
    -webkit-transition: background-position 0.2s;
    transition: background-position 0.2s;
  }

  &:hover > div:last-child {
    background-position: 89% center;
  }
}
#learn .take-action { margin-top: -28px; margin-bottom: 20px; }

@media (max-width: 768px) {
  .take-action > div { 
    padding: 10px $gridGutterWidthPhone;
    font-size: 13px;
    line-height: 14px;
    letter-spacing: 0px;
  }
  #learn .take-action { margin-top: 0px; width: 100%;}
}
@if $gridGutterWidthTablet != $gridGutterWidth { @media (min-width: 768px) and (max-width: 979px) {
  .take-action > div { padding: 15px $gridGutterWidthTablet; }
} }
@if $gridGutterWidthLarge != $gridGutterWidth { @media (min-width: 1200px) {
  .take-action > div { padding: 20px $gridGutterWidthLarge; }
} }

.column-buzz {
  > h2 { 
    text-align: center; 
    color: white;
    text-transform: uppercase;
    font-size: 46px;
    line-height: 48px;
    letter-spacing: -4px;
  }
  > hr {
    margin: 10px 43% 30px;
    border: 0;
    border-top: 4px solid $ribbonColor;
  }

  blockquote {
    quotes: "\201C""\201D""\2018""\2019";
    border-left: 0;
    padding: 0;
    margin-bottom: 15px;

    &:after {
      content: "";
    }
    &:before {
      content: open-quote;
      color: #aaa;
      font-size:4em;
      line-height:.1em;
      margin-right:.25em;
      vertical-align:-.4em;
    }
  }

  .tweet {
    @include clearfix();
    position: relative;
    margin-bottom: 15px;

    > img {
      width: 58px;
      height: 58px;
      border: 6px solid white;
      float: left;
    }
    > p {
      margin: 0 0 5px 90px;
      background-color: #343434; 
      padding: 5px 10px; 
      min-height: 50px;

      &:before {
        border-color: transparent #343434;
        border-style: solid;
        border-width: 10px 10px 0 0;
        top: 10px;
        content: "";
        position: absolute;
        left: 80px;
      }
    }
    > small {
      margin-left: 80px;
    }
  }

  > .callout {
    position: absolute;
    width: 120px;
    height: 120px;
    background-color: $lightBackground;
    color: $textLightBackground;
    top: -60px;
    right: -60px;
    text-align: center;

    > .one {
      margin-top: 30px;
      color: gray;
    }
  }
}

@media (max-width: 768px) {
  .column-buzz > h2 {
    font-size: 26px;
    line-height: 28px;
  }
  .column-buzz > .callout {
    display: none;
  }
}

#buzz { min-height: 500px; }

.link-with-action {
  font-weight: bold;
  text-transform: uppercase;
  text-decoration: none;
  > strong { color: $ribbonColor; }
  &:hover > strong, &:active > strong { color: $ribbonFoldColor; }
  &:hover, &:active { color: $ribbonFoldColor; text-decoration: none; }
}

// Standard header with ribbon
h1.ribbon {
  > .ribbon-content { 
    background-color: $ribbonColor;
    color: $ribbonTextColor;
    box-shadow: 1px 2px 2px rgba(0,0,0,0.5);
    display: inline-block;
    padding: 5px $gridGutterWidth 5px 0; /* left margin set by ribbon */
    min-width: 30%;
  }
  @include ribbon($ribbonFoldColor);
}
@if $gridGutterWidthTablet != $gridGutterWidth { @media (min-width: 768px) and (max-width: 979px) {
  h1.ribbon { @include ribbon_gutters($gridGutterWidthTablet); }
} }
@if $gridGutterWidthLarge != $gridGutterWidth { @media (min-width: 1200px) {
  h1.ribbon { @include ribbon_gutters($gridGutterWidthLarge); }
} }


// Main content containers, rows, columns
.row-content > .row { background-color: $belowNavColumnBackgroundColor; }
@media (max-width: 767px) {
  .row-content > .row { background-color: $textLightBackground; }
}

.column-buzz { background-color: $darkBackground; color: $textDarkBackground; }
.column-buzz a { color: $textDarkBackground; }

// Column navigation
.column-nav {
  background-color: $navColumnBackgroundColor;
  color: #666;

  label {
    color: #666;
  }
  a {
    color: #999;
  }

  .headline,
  h3,
  h3 > a { 
    color: white; 
    text-transform: uppercase; 
    font-weight: bold;
  }
  .nav-location {
    font-size: 19px;
    line-height: 46px;
    text-transform: uppercase;
    margin-top: 15px;
  }
  .nav-stacked {
    margin-left: -$gridGutterWidth/2;
  }

  .nav-pills .active > a,
  .nav-pills .active > a:hover {
    background-color: $navColumnBackgroundColor;
    color: $textDarkBackground;
  }
}

@media (max-width: 767px) {
  .column-nav > div > ul > li { float: left; width: 32%; }
  .nav-location { display: none; }
}

/* Stacked navigations indent by 1 gutter each time */
.nav-stacked > li > .nav-stacked { margin-left: $gridGutterWidth/2; margin-bottom: 0; }
@if $gridGutterWidthTablet != $gridGutterWidth { @media (min-width: 768px) and (max-width: 979px) {
  .nav-stacked > li > .nav-stacked { margin-left: $gridGutterWidthTablet/2; }
} }
@if $gridGutterWidthLarge != $gridGutterWidth { @media (min-width: 1200px) {
  .nav-stacked > li > .nav-stacked { margin-left: $gridGutterWidthLarge/2; }
} }


.column-content {
  background-color: $contentColumnBackgroundColor;

  h1 {
    margin-top: 25px;
    margin-bottom: 25px;
  }
}

.column-buzz { padding: $gridGutterWidth; position: relative;}

/* The body content of a site page */
.row-content {
  margin-bottom: 20px;
}


