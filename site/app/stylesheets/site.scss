/*
  Draft CSS for the site

  Notes:

  $gridGutterWidth changes based on responsive layout - we need to have a single responsive style
  per element that depends on it (maybe define $gridGutterWidthLarge and use it in responsive.scss)

  SASS 3.0 doesn't support inlining media queries - we need to upgrade

  Navbar markup seems to be correct, but needs lots of love at smaller resolutions

  Continue to pull out variables

  Simplify login link behavior - lots of styles for fairly simple markup

 */


@import "variables";
@import "bootstrap/variables";
@import "bootstrap/mixins";
@import "ribbon";

$topBarColor:                 #010101 !default;
$navigationColumnColor:       #030303 !default;
$underNavigationColumnColor:  #f2f2f2 !default;
$topNavigationColor:          #343434 !default;
$bodyColor:                   #eaeaea !default;
$contentColumnColor:          white !default;
$loginBackgroundColor:        #343434 !default;
$loginColor:                  #eaeaea !default;
$signupLinkColor:             #aaa !default;
$textDarkBackground:          white !default;
$darkBackground:              #030303 !default;
$textLightBackground:         white !default;
$lightBackground:             white !default;

$logoHeight:      70px !default;
$logoWidth:       100px !default;
$logoSeparation:  10px !default;

$ribbonColor:     #eb0011 !default;
$ribbonTextColor: white !default;
$ribbonFoldColor: #91010b !default;

/* move into core when th ebranding converges */
a { color: $ribbonFoldColor; }
a:hover, a:active { color: $ribbonColor; }

/* Hitch a div out of its parent */
.lift { margin-top: -90px; }
.lift-less { margin-top: -80px; }

/* Preliminary gutter adjustment on spans */
.gutter { margin-left: $gridGutterWidth; } /*FIXME needs responsive treatment */
.gutter-fill { margin-left: 0; padding-left: $gridGutterWidth; }
.gutter-fill-right { margin-right: -$gridGutterWidth; padding-right: $gridGutterWidth; }

/* A link that is a block, kind of like a thumbnail */
@mixin tile($activeColor, $hoverColor, $backgroundActiveColor, $backgroundHoverColor) {
  display: block;
  text-decoration: none;

  &:hover { 
    text-decoration: none; 
    color: $hoverColor; 
    background-color: $backgroundHoverColor;
  }
  &:active {
    text-decoration: none; 
    color: $activeColor; 
    background-color: $backgroundActiveColor;
  }
}

#top {background-color: $topBarColor; color: white;}
#nav {background-color: $topNavigationColor; color: white; }
#content, #learn {
  background: -moz-repeating-linear-gradient(-70deg, #e6e6e6, #e6e6e6 6px, #e4e4e4 9px, #e4e4e4 15px, #e6e6e6 18px) repeat scroll 0 0 transparent;
  //background-image: -moz-linear-gradient(-70deg, #e6e6e6 25%, #444 75%);
  //background-image: -moz-repeating-linear-gradient(-45deg, #e6e6e6 0%, #e4e4e4 50%, #e6e6e6);
  //background-size: 120px 120px; 
}
#buzz {background-color: $topNavigationColor;}
.column-content { background-color: $contentColumnColor; }
#content > .container > div > .row { background-color: $underNavigationColumnColor; }

.column-buzz { background-color: $darkBackground; color: $textDarkBackground; }
.column-buzz a { color: $textDarkBackground; }

.column-nav { background-color: $navigationColumnColor; }
.column-nav,
.column-nav label { color: #666; }
.column-nav .headline,
.column-nav h3,
.column-nav h3 > a { color: white; text-transform: uppercase; }
.column-nav a { color: #999; }


/* Nav section */

#top > .container {
  > div {
    padding: 8px 0;
    > a {
      color: $signupLinkColor;
      font-weight: bold;
      text-transform: uppercase;
    }
    > a:hover {
      text-decoration: none;
      color: $loginBackgroundColor;
      background-color: $loginColor;
    }
  }
  > div.login {
    padding: 5px 0;
    /* may want to turn these into some sort of specific styled button */
    > a {
      color: $loginColor;
      padding: 3px 10px;
      display: inline-block;
      background-color: $loginBackgroundColor;
    }
    > a.login-provider {
      height: 18px;
    }
    > a:hover {
      text-decoration: none;
      color: $loginBackgroundColor;
      background-color: $loginColor;
    }
  }
}

.navbar {
  padding-top: 30px;
  height: 130px;
  position: relative;

  .brand {
    text-align: center;
    text-transform: uppercase;
    position: relative;
    top: $logoHeight + $logoSeparation;
    /* reset styles */
    float: none;
    margin: 0;
    padding: 0;
  }
  .nav {
    font-size: 13px; 
    text-transform: uppercase;
    /* reset styles */
    float: none;
    margin: 0;

    > li {
      float: left;
      width: 20%;
      text-align: center;

      > a {
        color: white; 
        font-size: 13px; 
        text-transform: uppercase; 
        font-weight: bold;
        /* reset styles */
        padding: 5px 0;
      }
    }

    > li:nth-child(1) { text-align: left; }
    > li:nth-last-child(1) { text-align: right; }

    /* needs fixing */
    > .active > a,
    > .active > a:hover,
    > li > a:hover {
      /* reset styles */
      background: transparent;
      border: 0;
      box-shadow: none;
      text-decoration: underline;
    }
  }
}

/*FIXME After 3.1, move into element */
@media (max-width: 767px) { .navbar {
  height: 100px; 
} }
@media (max-width: 767px) { .navbar .brand {
  position: static;
  float: left;
  text-align: center;
  width: $logoWidth;
  margin-top: $logoHeight + $logoSeparation;
} }

@media (max-width: 767px) { .navbar .nav { 
  margin-left: $logoWidth + 10px; 
} }

@media (max-width: 767px) { .navbar .nav > li {
  float: left !important;
  width: 50% !important;
  text-align: center !important;
} }
@media (max-width: 767px) { .navbar .nav > li.divider {
  display: none;
} }
/*End FIXME*/

.messaging {
  margin-bottom: 30px; 
  clear: both;

  color: #bbb; 
  text-align: center;

  .primary { 
    font-size: 40px; 
    line-height: 40px;
    text-transform: uppercase; 
  }
  strong { color: white; }
  .secondary { font-size: 16px; line-height: 18px; }
}

@media (max-width: 767px) {
  #content > .container > div > .row { background-color: $textLightBackground; }
  .messaging {
    text-align: left;
    margin-bottom: 10px; 

    .primary { font-size: 20px; line-height: 20px;}
    .secondary { font-size: 13px; line-height: 18px; }
  }
}

/* squash the secondary message into the space the primary uses */
.messaging-home .secondary { padding: 0 45px; }

/* Content section */

#nav, #learn { padding-bottom: 110px; }
#buzz { min-height: 500px; }
.column-buzz { padding: $gridGutterWidth; position: relative;}

#learn .link-tile {
  color: #343434;
  padding: 15px $gridGutterWidth;
  @include tile(#343434, #343434, $ribbonFoldColor, #ccc);

  > :last-child { margin-bottom: 0; }
}

.take-action {
  @include clearfix();
  display: block;

  text-transform: uppercase;
  font-weight: bold;
  font-size: 20px;
  letter-spacing: 1px;

  color: white;
  background-color: $ribbonColor;

  &:hover, &:active {
    text-decoration: none;
    color: white;
  }

  > * {
    padding: 27px $gridGutterWidth;
  }

  > .pull-right {
    background-color: $ribbonFoldColor;
  }
}
#learn .take-action { margin-top: -37px; margin-bottom: 20px; }
.column-buzz {
  > h2 { 
    text-align: center; 
    color: white;
    text-transform: uppercase;
    font-size: 46px;
    letter-spacing: -4px;
  }
  > hr {
    margin: 10px 43% 30px;
    border: 0;
    border-top: 4px solid $ribbonColor;
  }

  blockquote {
    quotes: "\201C""\201D""\2018""\2019";
    border-left: 0;
    padding: 0;
    margin-bottom: 15px;

    &:after {
      content: "";
    }
    &:before {
      content: open-quote;
      color: #aaa;
      font-size:4em;
      line-height:.1em;
      margin-right:.25em;
      vertical-align:-.4em;
    }
  }

  .tweet {
    @include clearfix();
    position: relative;
    margin-bottom: 15px;

    > img {
      width: 58px;
      height: 58px;
      border: 6px solid white;
      float: left;
    }
    > p {
      margin: 0 0 5px 90px;
      background-color: #343434; 
      padding: 5px 10px; 
      min-height: 50px;

      &:before {
        border-color: transparent #343434;
        border-style: solid;
        border-width: 10px 10px 0 0;
        top: 10px;
        content: "";
        position: absolute;
        left: 80px;
      }
    }
    > small {
      margin-left: 80px;
    }
  }

  > .callout {
    position: absolute;
    width: 120px;
    height: 120px;
    background-color: $lightBackground;
    color: $textLightBackground;
    top: -60px;
    right: -60px;
    text-align: center;

    > .one {
      margin-top: 30px;
      color: gray;
    }
  }
}

.align-right {
  text-align: right;
}

.link-with-action {
  font-weight: bold;
  text-transform: uppercase;
  text-decoration: none;
  > strong { color: $ribbonColor; }
  &:hover > strong, &:active > strong { color: $ribbonFoldColor; }
  &:hover, &:active { color: $ribbonFoldColor; text-decoration: none; }
}

/* FIXME: better scoped or defined? */
.column-content h1 { margin-top: 25px; margin-bottom: 25px; }

/* The body content of a site page */
.row-content {
  margin-bottom: 20px;

  > .column-nav {
    margin-left: 0;
    padding-right: $gridGutterWidth;
  }
  > .column-content {
    margin-left: 0px;
    padding-bottom: 30px;
  }
}
@mixin row_content_gutters($width: $gridGutterWidth) {
  .row-content {
    > .column-nav {
      padding-right: $width;
    }
    > .column-content {
      margin-right: -$width;

      padding-left: $width;
      padding-right: $width;
    }
  }
}
@include row_content_gutters();
@if $gridGutterWidthTablet != $gridGutterWidth { @media (min-width: 768px) and (max-width: 979px) {
  @include row_content_gutters($gridGutterWidthTablet);
} }
@if $gridGutterWidthLarge != $gridGutterWidth { @media (min-width: 1200px) {
  @include row_content_gutters($gridGutterWidthLarge);
} }

@media (max-width: 767px) {
  #nav { padding-bottom: 30px; }
  #content > .container { padding: 0; }
  .lift {
    .column-nav { margin-top: 0; }
    .column-content { margin-top: 0; }
  }
  .row-content > .column-content { margin-right: 0; } 
}

@if $gridGutterWidthTablet != $gridGutterWidth { @media (min-width: 768px) and (max-width: 979px) {
} }
@if $gridGutterWidthLarge != $gridGutterWidth { @media (min-width: 1200px) {
} }

/* Left nav section */
.column-nav {
  .nav-location { font-size: 19px; line-height: 46px; text-transform: uppercase; margin-top: 15px; }
}
@mixin column_nav_gutters($width: $gridGutterWidth) {
  .column-nav {
    > * { margin-left: $width; }
    > .nav-stacked { margin-left: $width/2; }
  }
}
@include column_nav_gutters();
@if $gridGutterWidthTablet != $gridGutterWidth { @media (min-width: 768px) and (max-width: 979px) {
  @include column_nav_gutters($gridGutterWidthTablet);
} }
@if $gridGutterWidthLarge != $gridGutterWidth { @media (min-width: 1200px) {
  @include column_nav_gutters($gridGutterWidthLarge);
} }

/* Stacked navigations indent by 1 gutter each time */
.nav-stacked .nav-stacked { margin-left: $gridGutterWidth; margin-bottom: 0; }
@if $gridGutterWidthTablet != $gridGutterWidth { @media (min-width: 768px) and (max-width: 979px) {
  .nav-stacked .nav-stacked { margin-left: $gridGutterWidthTablet; }
} }
@if $gridGutterWidthLarge != $gridGutterWidth { @media (min-width: 1200px) {
  .nav-stacked .nav-stacked { margin-left: $gridGutterWidthLarge; }
} }
@media (max-width: 767px) {
  #content .column-nav > ul > li { float: left; width: 32%; }
  .nav-location { display: none; }
}

/* Body */
#content h1.ribbon {
  > .ribbon-content { 
    background-color: $ribbonColor;
    color: $ribbonTextColor;
    box-shadow: 1px 2px 2px rgba(0,0,0,0.5);
    display: inline-block;
    padding: 5px $gridGutterWidth 5px 0; /* left margin set by ribbon */
    min-width: 30%;
  }
  @include ribbon($ribbonFoldColor);
}
@if $gridGutterWidthTablet != $gridGutterWidth { @media (min-width: 768px) and (max-width: 979px) {
  #content h1.ribbon { @include ribbon_gutters($gridGutterWidthTablet); }
} }
@if $gridGutterWidthLarge != $gridGutterWidth { @media (min-width: 1200px) {
  #content h1.ribbon { @include ribbon_gutters($gridGutterWidthLarge); }
} }

/* Drupal specific markup, we may want to wrap this with a top level selector on body.drupal or something */
.views-field-rss { float: right; }
.views-field-title { font-size: 16px; line-height: 20px; }
.views-field-picture { float: left; margin-right: 6px; }
.view-forum-list .views-field-picture { float: right; margin-left: 6px; }
.block-stats div { display: inline; }
.views-table .views-field-pageviews { white-space: nowrap; }
.views-field-group-name { display: inline; }

.column-nav .view-threads-by-popularity .views-table {
  h4 { display: inline; color: #666; font-size: 13px; line-height: 18px; }
  a { text-decoration: underline; }
  span.views-field-title { display: block; }
  > div { margin-bottom: 15px; }
  .block-stats { clear: both; }
}

.og-mission { margin-bottom: 10px; }

.block { @include clearfix(); margin-bottom: 20px; }
.column-nav {
  .block .item-list { margin-left: $gridGutterWidth; }
  .view-user-profile-box { margin-bottom: 20px; }
}

.community textarea {
  width: auto;
}

.community form {
  fieldset legend { font-size: 14px; line-height: 18px; }
  .fieldset-wrapper { margin-left: 10px; }
}
.clear-block { @include clearfix(); }

.view-nodes-by-category article.blog {
  margin-bottom: 25px;

  > h2 { line-height: 25px; }

  > .breadcrumb {
    margin-bottom: 5px;
    text-transform: uppercase;
    font-weight: bold;

    > .creator { color: black; }
    > .created { color: #888; }

  }

  .nid a { font-size: 16px; }

  > .nid_1 {
    text-transform: uppercase;
    text-align: right;
    padding-bottom: 3px;
    border-bottom: 1px solid #aaa;
    font-size: 11px;
    > a {
      color: #888;
    }
  }
}

.comment { margin-bottom: 20px; padding-top: 8px; border-top: 1px solid #ddd; }
.comment > table td { vertical-align: top; }
.comment .comment-author {
  .views-row {
    padding: 10px; 
    width: 170px;
    margin-right: 10px;
    margin-top: 5px;
    background-color: rgb(239, 239, 239);
    &:hover .views-field-value { height: 100%; }
    &:hover .views-field-phpcode:after { content: none; }
  }
  .views-field-phpcode {
    clear: both;
    &:after { content: '...'; }
  }
  .views-field-value {
    height: 0px;
    overflow: hidden;
  }
}

/* copied from system.css */
html.js fieldset.collapsed {
    border-bottom-width: 0;
    border-left-width: 0;
    border-right-width: 0;
    height: 1em;
    margin-bottom: 0;
}
html.js fieldset.collapsed * {
    display: none;
}
html.js fieldset.collapsed legend {
    display: block;
}
html.js fieldset.collapsible legend a {
    background: url("../../misc/menu-expanded.png") no-repeat scroll 5px 75% transparent;
    padding-left: 15px;
}
html.js fieldset.collapsed legend a {
    background-image: url("../../misc/menu-collapsed.png");
    background-position: 5px 50%;
}
* html.js fieldset.collapsed legend, * html.js fieldset.collapsed legend *, * html.js fieldset.collapsed table * {
    display: inline;
}
html.js fieldset.collapsible {
    position: relative;
}
html.js fieldset.collapsible legend a {
    display: block;
}
html.js fieldset.collapsible .fieldset-wrapper {
    overflow: auto;
}
