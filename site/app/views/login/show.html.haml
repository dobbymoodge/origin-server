- @suppress_ribbon = true
- content_for :title, 'Sign in to OpenShift'
- content_for :javascripts do
  :javascript
    showOpenIssues = function(data) {
      var el = document.getElementById('issues');
      if (el) {
        var template_issues = el.innerHTML;
        var template_updates = el.getElementsByTagName('aside')[0].innerHTML;
        var content_issues = '';
        var content_updates = '';
        for (i = 0; i < data.open.length; i++) {
          content_issues += template_issues
            .replace(/\{\{title\}\}/, data.open[i].issue.title)
            .replace(/\{\{timestamp\}\}/, data.open[i].issue.created_at_in_words + ' ago');
          for (j = 0; j < data.open[i].issue.updates.length; j++) {
            content_updates += template_updates
              .replace(/\{\{description\}\}/, data.open[i].issue.updates[j].description)
              .replace(/\{\{timestamp\}\}/, data.open[i].issue.updates[j].created_at_in_words + ' ago');
          }
        }
        el.innerHTML = content_issues;
        el.getElementsByTagName('aside')[0].innerHTML = content_updates;
        el.style.display = '';
      }
    }
  %script{:src => open_issues_jsonp_url('showOpenIssues')}

.column-1
  %h1.ribbon Sign in to OpenShift
  
  = semantic_form_for @user, :url => login_path, :html => {:id => 'login_form', :class => 'label-hide'} do |f|
    - if @redirectUrl.present?
      %input{:type => "hidden", :name => "then", :value => @redirectUrl }
    = f.semantic_errors
    = f.input :rhlogin,
              :wrapper_html => { :class => "control-group-important" },
              :label => 'Login',
              :input_html => {:autofocus => @user.rhlogin.blank?, :placeholder => 'OpenShift or Red Hat account', :class => @user.errors[:base].present? ? 'error' : 'max'}
    = f.input :password,
              :wrapper_html => { :class => "control-group-important" },
              :as => :password,
              :hint => link_to("Forgot your password?", new_account_password_path),
              :input_html => {:autofocus => @user.rhlogin.present?, :placeholder => 'Password', :class => @user.errors[:base].present? ? 'error' : 'max'}
    = f.buttons do
      = f.commit_button "Sign in", :button_html =>  {:class => 'btn btn-primary'}
      -# or 
      -# = link_to 'create an account', @register_url || new_account_path

.column-2
  %h2{:style => "margin-top: 6px"}
    Need an account?
    = link_to 'Create One', @register_url || new_account_path
  %ul.spaced-items.unstyled
    %li Code and deploy to the cloud in minutes.
    %li No-Lock-In. Built on open technologies.
    %li Java, Ruby, Node.js, Python, PHP, or Perl
    %li Grow your applications easily with resource scaling.
