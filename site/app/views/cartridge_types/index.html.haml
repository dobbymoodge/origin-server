:css
  .cartridge_type {background-color: #F5F5F5; padding: 9px 35px 10px 21px; margin-bottom: 20px; cursor: pointer;}
  .cartridge_type:hover {background-color: #e0e0e0;}
  .cartridge_type:active {background-color: #CC0000; color: white}
  .cartridge_type > ul.meta > li > label {display: inline;}
  .cartridge_type.installed:hover {background-color: #F5F5F5;}
  .cartridge_type.installed:active {background-color: #F5F5F5;}
  .cartridge_type.installed{color:#959595; cursor: auto;}
  .cartridge_type.installed > h3 {color:#959595 !important;}
  .cartridge_type.inactive:hover {background-color: #F5F5F5;}
  .cartridge_type.inactive:active {background-color: #F5F5F5;}
  .cartridge_type.inactive{color:#959595; cursor: auto;}
  .cartridge_type.inactive > h3 {color:#959595 !important;}

%h1.invisible Add a New Cartidge
= cartridge_wizard_steps_create 0
- if @framework.id == 'haproxy-1.4'
  .alert 
    Cartridges are currently unable to be embedded in a scaled application. 
    We will be adding support shortly!
    In the mean time, some are available as standalone applications.
-else
  %p
    Choose a cartridge to add to your application.

.row
  - unless @cart_types.empty?
    - @cart_types.each_slice((@cart_types.length/3.0).ceil).each do |types|
      .span4
        = render :collection => types, :partial => 'cartridge_types/cartridge_type'
  - unless @installed_cart_types.empty?
    - @installed_cart_types.each_slice((@installed_cart_types.length/3.0).ceil).each do |types|
      .span4
        = render :collection => types, :partial => 'cartridge_types/cartridge_type',
                 :locals => {:hide_link => true}
  - unless @requires_cart_types.empty?
    - @requires_cart_types.each_slice((@requires_cart_types.length/3.0).ceil).each do |types|
      .span4
        = render :collection => types, :partial => 'cartridge_types/cartridge_type',
                 :locals => {:hide_link => true, :reason => :requires}
  - unless @conflicts_cart_types.empty?
    - @conflicts_cart_types.each_slice((@conflicts_cart_types.length/3.0).ceil).each do |types|
      .span4
        = render :collection => types, :partial => 'cartridge_types/cartridge_type',
                 :locals => {:hide_link => true, :reason => :conflicts}
  - unless @blocked_cart_types.empty?
    - @blocked_cart_types.each_slice((@blocked_cart_types.length/3.0).ceil).each do |types|
      .span4
        = render :collection => types, :partial => 'cartridge_types/cartridge_type',
                 :locals => {:hide_link => true, :reason => :blocked}

- content_for :javascripts do
  :javascript
    jQuery('.cartridge_type').click(function() {
      a = $('a.btn', this)[0];
      window.location = a.href
    });
