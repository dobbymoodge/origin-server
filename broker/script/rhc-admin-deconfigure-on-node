#!/usr/bin/env ruby

require "/var/www/libra/broker/config/environment"
require 'getoptlong'
require 'mcollective'

include MCollective::RPC

options = rpcoptions do |parser, options|
    parser.define_head "Deconfigure an application on a node"
    parser.banner = "Usage: rhc-deconfigure-on-node [options]"

    parser.on('-i', '--server_identity SERVER_IDENTITY', 'Server identity (e.g. ip-10-10-10-10)') do |server_identity|
      options[:server_identity] = server_identity
    end

    parser.on('-n', '--app APP', 'Application name') do |app_name|
      options[:app_name] = app_name
    end

    parser.on('-l', '--rhlogin RHLOGIN', 'Account to act on') do |rhlogin|
      options[:rhlogin] = rhlogin
    end

end

unless options.include?(:app_name)
    puts "Specify app name"
    exit 1
end

unless options.include?(:rhlogin)
    puts "Specify rhlogin"
    exit 1
end

unless options.include?(:server_identity)
    puts "Specify server identity"
    exit 1
end

# Set the MCollective options
if options[:timeout] && options[:timeout] < 30
    options[:timeout] = 30
end
#Rails.configuration.rpc_opts = options

user = CloudUser.find(options[:rhlogin])
app  = Application.find(user,options[:app_name])
app.container = Cloud::Sdk::ApplicationContainerProxy.instance(options[:server_identity])

app.container.deconfigure_cartridge(app, app.framework)
app.container.destroy(app)
puts "Successfully deconfigured '#{options[:app_name]}' on '#{app.container.id}'"
