#!/usr/bin/env ruby

require 'rubygems'
require 'getoptlong'
require 'mcollective'

include MCollective::RPC

options = rpcoptions do |parser, options|
    parser.define_head "Move an application to another node"
    parser.banner = "Usage: rhc-admin-move [options]"

    parser.on('-i', '--target_server_identity TARGET_SERVER_IDENTITY', 'Target server identity (e.g. ip-10-10-10-10)') do |target_server_identity|
      options[:target_server_identity] = target_server_identity
    end

    parser.on('-p', '--node_profile NODE_PROFILE', "Node profile (e.g. small)") do |node_profile|
      options[:node_profile] = node_profile
    end

    parser.on('-n', '--app APP', 'Application name (required with rhlogin)') do |app_name|
      options[:app_name] = app_name
    end
    
    parser.on('--app_uuid APP_UUID', 'Application uuid (replaces rhlogin and app name)') do |app_uuid|
      options[:app_uuid] = app_uuid
    end

    parser.on('-l', '--rhlogin RHLOGIN', 'Account to act on (required with app name)') do |rhlogin|
      options[:rhlogin] = rhlogin
    end
    
    parser.on('-u', '--destination_district_uuid DISTRICT_UUID', 'Uuid of the district to move to.  Not to be used in conjunction with -i') do |destination_district_uuid|
      options[:destination_district_uuid] = destination_district_uuid
    end
    
    parser.on('--allow_change_district', 'Must be used in conjunction with -i or -u if changing district') do |v|
      options[:allow_change_district] = true
    end
    options[:allow_change_district] = false unless options[:allow_change_district]
end

require "/var/www/stickshift/broker/config/environment"

unless options.include?(:app_name) && options.include?(:rhlogin) || options.include?(:app_uuid)
    puts "ERROR: Specify app name (-n) and rhlogin (-l) or app uuid (--app_uuid)"
    exit 1
end

if options.include?(:app_uuid) and options.include?(:app_name)
    puts "ERROR: you can't specify both app uuid and app name or rhlogin"
    exit 1
end

if options.include?(:app_uuid) and options.include?(:rhlogin)
    puts "ERROR: you can't specify both app uuid and rhlogin"
    exit 1
end

# Set the MCollective options
if options[:timeout] && options[:timeout] < 30
    options[:timeout] = 30
end
#Rails.configuration.rpc_opts = options

app = nil
if (options[:app_uuid])
  app  = Application.find_by_uuid(options[:app_uuid])
else
  user = CloudUser.find(options[:rhlogin])
  app  = Application.find(user, options[:app_name])
end

unless app
  puts "ERROR: Application not found: #{options[:app_uuid] ? options[:app_uuid] : options[:app_name]}"
end

url = "http://#{app.name}-#{app.user.namespace}.#{Rails.configuration.ss[:domain_suffix]}"

puts "URL: #{url}"
puts "Login: #{app.user.login}"
puts "App UUID: #{app.uuid}"

destination_container = nil
destination_container = StickShift::ApplicationContainerProxy.instance(options[:target_server_identity]) if options[:target_server_identity]
reply = app.container.move_app(app, destination_container, options[:destination_district_uuid], options[:allow_change_district], options[:node_profile])

puts "################# ADDITIONAL DEBUG OUTPUT #################\n#{reply.debugIO.string}\n" unless reply.debugIO.string.empty?
puts "################# ADDITIONAL ERROR OUTPUT #################\n#{reply.errorIO.string}\n" unless reply.errorIO.string.empty?
