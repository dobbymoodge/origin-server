#!/usr/bin/env ruby

require "/var/www/libra/broker/config/environment"
require 'getoptlong'

def usage
    puts <<USAGE
== Synopsis

rhc-admin-ctl-app: Control user applications

== Usage

rhc-admin-ctl-app OPTIONS

Options:
-l|--rhlogin <rhlogin>
    Red Hat login (RHN or OpenShift login with OpenShift Express access) (required)
-a|--app     <application>
    Application name  (alphanumeric) (required)
-c|--command <command>
    (start|stop|force-stop|restart|status|destroy) (required)
-b|--bypass
    Ignore exceptions
-h|--help
    Show Usage info
USAGE
end

opts = GetoptLong.new(
    ["--rhlogin",          "-l", GetoptLong::REQUIRED_ARGUMENT],
    ["--app",              "-a", GetoptLong::REQUIRED_ARGUMENT],    
    ["--command",          "-c", GetoptLong::REQUIRED_ARGUMENT],
    ["--bypass",           "-b", GetoptLong::NO_ARGUMENT],    
    ["--help",             "-h", GetoptLong::NO_ARGUMENT]
)

args = {}
begin
    opts.each{ |k,v| args[k]=v }
rescue GetoptLong::Error => e
    usage
    exit -100
end

login    = args["--rhlogin"]
app_name = args["--app"]
command  = args['--command']
bypass   = args['--bypass']

if login.nil? or app_name.nil? or command.nil? or args["--help"]
  usage
  exit 1
end

user = CloudUser.find(login)
unless user
  print "User #{login} not found.\n"
  exit 1
end
app = Application.find(user,app_name)
unless app
  print "Application #{app_name} for user #{login} not found.\n"
  exit 1
end

reply = ResultIO.new
case command
when "start"
  reply.append app.start
when "stop"
  reply.append app.stop  
when "force-stop"
  reply.append app.force_stop  
when "restart"
  reply.append app.restart  
when "status"
  reply.append app.status  
when "destroy"
  unless bypass
    puts <<-WARNING
  !!!! WARNING !!!! WARNING !!!! WARNING !!!!
  You are about to destroy the #{app_name} application.

  This is NOT reversible, all remote data for this application will be removed.
  WARNING

    print "Do you want to destroy this application (y/n): "
    begin
      agree = gets.chomp
      if agree != 'y'
        puts "\n"
        exit 217
      end
    rescue Interrupt
      puts "\n"
      exit 217
    end
  end
  
  reply.append app.deconfigure_dependencies
  reply.append app.destroy
  if app.framework_cartridge == "jenkins"
    user.applications.each do |uapp|
      reply.append uapp.remove_dependency('jenkins-client-1.4') if uapp.name != app.name and uapp.embedded and uapp.embedded.has_key?('jenkins-client-1.4')
    end
  end
    
  reply.append app.destroy_dns
  app.delete
  reply.resultIO << "Successfully destroyed application: #{app.name}" if reply.resultIO.string.empty?
end

print "DEBUG OUTPUT:\n#{reply.debugIO.string}\n\n" unless reply.debugIO.string.empty?
print "ERROR OUTPUT:\n#{reply.errorIO.string}\n\n" unless reply.errorIO.string.empty?
print "#{reply.resultIO.string}\n" unless reply.resultIO.string.empty?
