#!/usr/bin/env ruby

require "/var/www/libra/broker/config/environment"
require 'getoptlong'
require 'mcollective'

include MCollective::RPC

options = rpcoptions do |parser, options|
    parser.define_head "Control libra agent"
    parser.banner = "Usage: rhc-admin-cartridge-do [options]"

    parser.on('-a', '--action ACTION', 'Action to call') do |action|
      options[:action] = action
    end

    parser.on('-f', '--cartridge CARTRIDGE', "Cartridge (e.g. php-5.3)") do |cartridge|
      options[:cartridge] = cartridge
    end

    parser.on('-n', '--app APP', 'Application name') do |app_name|
      options[:app_name] = app_name
    end

    parser.on('-l', '--rhlogin RHLOGIN', 'Account to act on') do |rhlogin|
      options[:rhlogin] = rhlogin
    end

end

unless options.include?(:action)
    puts "Specify action"
    exit 1
end

unless options.include?(:cartridge) || options[:action] != 'configure'
    puts "You need to specify a cartridge for configure"
    exit 1
end

unless options.include?(:app_name)
    puts "Specify app name"
    exit 1
end

unless options.include?(:rhlogin)
    puts "Specify rhlogin"
    exit 1
end

# Set the MCollective options
if options[:timeout] && options[:timeout] < 30
    options[:timeout] = 30
end

Rails.application.config.rpc_opts = options
user = CloudUser.find(options[:rhlogin])
app  = Application.find(user,options[:app_name])
reply = app.container.send(:run_cartridge_command, options[:cartridge], app, options[:action])

print "DEBUG OUTPUT:\n#{reply.debugIO.string}\n\n" unless reply.debugIO.string.empty?
print "ERROR OUTPUT:\n#{reply.errorIO.string}\n\n" unless reply.errorIO.string.empty?
print "#{reply.resultIO.string}\n" unless reply.resultIO.string.empty?