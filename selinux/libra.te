policy_module(libra,1.0.17)

########################################
#
# Declarations
#
attribute libra_domain;

type libra_initrc_t;
type libra_initrc_exec_t;
init_daemon_domain(libra_initrc_t, libra_initrc_exec_t)
init_ranged_daemon_domain(libra_initrc_t, libra_initrc_exec_t, s0 - mcs_systemhigh)

type libra_tmp_t;
files_tmp_file(libra_tmp_t)

type libra_var_lib_t;
files_poly(libra_var_lib_t)
files_poly_parent(libra_var_lib_t)

type libra_t;
libra_service_domain(libra_t)

type libra_net_t;
libra_service_domain(libra_net_t)

type libra_min_t;
libra_service_domain(libra_min_t)

type libra_log_t;
logging_log_file(libra_log_t)


########################################
#
# libra standard local policy
#
corenet_tcp_connect_mssql_port(libra_t)
corenet_tcp_connect_mysqld_port(libra_t)
corenet_tcp_connect_postgresql_port(libra_t)
corenet_tcp_connect_git_port(libra_t)
corenet_tcp_connect_oracle_port(libra_t)
corenet_tcp_connect_http_port(libra_t)
corenet_tcp_connect_ftp_port(libra_t)
corenet_tcp_connect_ssh_port(libra_t)
corenet_tcp_connect_jboss_management_port(libra_t)
corenet_tcp_connect_memcache_port(libra_t)
corenet_tcp_connect_http_cache_port(libra_t)
corenet_tcp_connect_amqp_port(libra_t)
corenet_tcp_connect_generic_port(libra_t)
corenet_udp_bind_generic_port(libra_t)
corenet_tcp_bind_jboss_management_port(libra_t)

sendmail_domtrans(libra_t)

ssh_exec(libra_t)

########################################
#
# libra net local policy
#
corenet_tcp_connect_all_ports(libra_net_t)

########################################
#
# libra general local policy
#
allow libra_domain self:process { getattr fork getpgid setpgid setrlimit setsched signal_perms ptrace getsched execmem };
allow libra_domain self:sem create_sem_perms;
allow libra_domain self:tcp_socket  create_stream_socket_perms;

allow libra_domain self:fifo_file rw_fifo_file_perms;
allow libra_domain self:unix_stream_socket { create_stream_socket_perms connectto };
dontaudit libra_domain self:netlink_audit_socket create_socket_perms;

allow libra_domain libra_log_t:file { getattr append lock ioctl };

manage_dirs_pattern(libra_domain, libra_tmp_t, libra_tmp_t)
manage_files_pattern(libra_domain, libra_tmp_t, libra_tmp_t)
manage_sock_files_pattern(libra_t, libra_tmp_t, libra_tmp_t)
files_tmp_filetrans(libra_domain, libra_tmp_t, { file dir sock_file })
can_exec(libra_t, libra_tmp_t)

manage_dirs_pattern(libra_domain, libra_var_lib_t, libra_var_lib_t)
manage_files_pattern(libra_domain, libra_var_lib_t, libra_var_lib_t)
manage_sock_files_pattern(libra_domain, libra_var_lib_t, libra_var_lib_t)
manage_lnk_files_pattern(libra_domain, libra_var_lib_t, libra_var_lib_t)
files_var_lib_filetrans(libra_domain, libra_var_lib_t, { dir file sock_file } )
allow libra_domain libra_var_lib_t:file entrypoint;

kernel_read_system_state(libra_domain)
kernel_read_network_state(libra_domain)
kernel_dontaudit_search_kernel_sysctl(libra_domain)

corecmd_exec_bin(libra_domain)
corecmd_exec_shell(libra_domain)

dev_list_sysfs(libra_domain)
dev_read_rand(libra_domain)
dev_dontaudit_append_rand(libra_domain)
dev_dontaudit_write_urand(libra_domain)

domain_use_interactive_fds(libra_domain)
domain_dontaudit_read_all_domains_state(libra_domain)

fs_dontaudit_rw_anon_inodefs_files(libra_domain)
fs_search_tmpfs(libra_domain)
fs_getattr_xattr_fs(libra_domain)
fs_dontaudit_getattr_all_fs(libra_domain)
fs_list_inotifyfs(libra_domain)
fs_dontaudit_list_auto_mountpoints(libra_domain)
storage_dontaudit_getattr_fixed_disk_dev(libra_domain)

files_dontaudit_search_all_pids(libra_domain)
files_dontaudit_getattr_lost_found_dirs(libra_domain)
files_dontaudit_search_all_mountpoints(libra_domain)
files_read_etc_files(libra_domain)
files_read_usr_files(libra_domain)
files_dontaudit_getattr_non_security_sockets(libra_domain)

libs_exec_lib_files(libra_domain)

logging_send_syslog_msg(libra_domain)
logging_inherit_append_all_logs(libra_domain)

init_dontaudit_read_utmp(libra_domain)

miscfiles_read_localization(libra_domain)
miscfiles_read_fonts(libra_domain)
miscfiles_read_man_pages(libra_domain)

term_dontaudit_search_ptys(libra_domain)

userdom_dontaudit_search_admin_dir(libra_domain)

application_exec(libra_domain)

apache_exec(libra_domain)
apache_exec_modules(libra_domain)
apache_list_modules(libra_domain)
apache_read_config(libra_domain)
apache_search_config(libra_domain)
apache_read_sys_content(libra_domain)
corenet_tcp_bind_http_cache_port(libra_domain)

java_exec(libra_domain)

########################################
#
# libra initrc local policy
#

gen_require(`
    role system_r;
    role unconfined_r;
    type unconfined_t;
    type rpm_script_t;
    type puppet_t;
    type puppet_tmp_t;
')
 
role_transition unconfined_r libra_initrc_exec_t system_r;
unconfined_domain_noaudit(libra_initrc_t)

domtrans_pattern(unconfined_t, libra_initrc_exec_t, libra_initrc_t)
domtrans_pattern(rpm_script_t, libra_initrc_exec_t, libra_initrc_t)
domtrans_pattern(puppet_t, libra_initrc_exec_t, libra_initrc_t)
dontaudit domain puppet_tmp_t:file { read write };

manage_dirs_pattern(libra_initrc_t, libra_log_t, libra_log_t)
manage_files_pattern(libra_initrc_t, libra_log_t, libra_log_t)
logging_log_filetrans(libra_initrc_t, libra_log_t, { file dir })

allow libra_initrc_t libra_domain:process { getattr getsched setsched transition signal signull sigkill };
allow libra_domain libra_initrc_t:fd use;
allow libra_domain libra_initrc_t:fifo_file rw_inherited_fifo_file_perms;
allow libra_domain libra_initrc_t:process sigchld;
dontaudit libra_domain libra_initrc_t:process signull;
dontaudit libra_domain libra_initrc_t:socket_class_set { read write };

# use this when available, see can_exec below MAL 20110422
#apache_exec_rotatelogs(libra_domain)

########################################
#
# generic policy 
#

require {
	type httpd_exec_t;
	type httpd_rotatelogs_exec_t;
	attribute exec_type;
	type sshd_t;
	type httpd_t;
	type sendmail_t;
	attribute domain;
	type ssh_home_t;
	type quota_t;
	type quota_db_t;
}

allow libra_domain httpd_exec_t:file entrypoint;
dontaudit libra_domain exec_type:file getattr;

libra_search_lib(sshd_t)
dontaudit sshd_t self:capability sys_admin;
allow libra_domain sshd_t:process sigchld;
allow sshd_t libra_domain:process { rlimitinh signal };
dontaudit libra_domain ssh_home_t:dir search_dir_perms;

dontaudit sendmail_t libra_initrc_t:fifo_file { read write };
dontaudit domain libra_t:fifo_file { getattr write };

append_files_pattern(sendmail_t, libra_var_lib_t, libra_var_lib_t)
allow domain libra_var_lib_t:dir search_dir_perms;
allow domain libra_var_lib_t:file { append getattr };

filetrans_pattern(quota_t, libra_var_lib_t, quota_db_t, file)

########################################
#
# Mysql support
#

mysql_exec(libra_t)
mysql_safe_exec(libra_t)
corenet_tcp_bind_mysqld_port(libra_t)
mysql_search_db(libra_t)
allow libra_t self:process setexec;

##########
# Used for development or when the li controller is running outside
# of the li framework (like when it's installed in /var/www/html

corenet_tcp_connect_amqp_port(httpd_t)
corenet_udp_bind_generic_port(httpd_t)

#################################
# Potentially dangerous configs #
#################################

# Allow users to execute files in their home dir
allow libra_t libra_var_lib_t:file { execute execute_no_trans };

#################################
# Allow Log Rotation            #
#################################
# Allow libra users to run apache rotatelogs
# replace with apache_exec_rotatelogs(libra_domain) when available MAL 20110422
can_exec(libra_t, httpd_rotatelogs_exec_t)

allow unconfined_t libra_t:process transition;
dontaudit unconfined_t libra_t:process { noatsecure siginh rlimitinh };
allow unconfined_t libra_t:fd use;
allow unconfined_t libra_t:fifo_file rw_inherited_fifo_file_perms;
allow unconfined_t libra_t:process sigchld;
dontaudit unconfined_t libra_t:socket_class_set { read write };
corecmd_shell_entry_type(libra_domain)
corecmd_bin_entry_type(libra_domain)
userdom_use_inherited_user_ptys(libra_t)

gpg_entry_type(libra_t)

# Silence passenger
files_dontaudit_getattr_all_files(httpd_t)
domain_dontaudit_read_all_domains_state(httpd_t)
require {
        type httpd_t;
        class capability sys_ptrace;
}

#============= httpd_t ==============
allow httpd_t self:capability sys_ptrace;

type libra_cgroup_read_t;
type libra_cgroup_read_exec_t;
application_domain(libra_cgroup_read_t, libra_cgroup_read_exec_t)

permissive libra_cgroup_read_t;

########################################
#
# libra_cgroup_read local policy
#

allow libra_cgroup_read_t self:fifo_file rw_fifo_file_perms;
allow libra_cgroup_read_t self:unix_stream_socket create_stream_socket_perms;

dev_read_urand(libra_cgroup_read_t)

domain_use_interactive_fds(libra_cgroup_read_t)

files_read_etc_files(libra_cgroup_read_t)

userdom_use_inherited_user_ptys(libra_cgroup_read_t)

miscfiles_read_localization(libra_cgroup_read_t)

domtrans_pattern(libra_domain, libra_cgroup_read_exec_t, libra_cgroup_read_t)
role system_r types libra_cgroup_read_t;

fs_read_cgroup_files(libra_cgroup_read_t)
