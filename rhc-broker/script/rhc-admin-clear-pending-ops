#!/usr/bin/env oo-ruby

#--
# Copyright 2012 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#++

require 'rubygems'
require 'getoptlong'
require 'time'

def usage
  puts <<USAGE
== Synopsis

#{$0}: Check all user applications and delete all pending_op_groups that were created before a given time

== Usage

#{$0} OPTIONS

Options:
-t|--time
    Time in hours where the pending ops older than this age will get deleted (default 12)
-u|--uuid
    Specific app's uuid where the pruning operation will be done - if not given all apps will be screened
-h|--help
    Show Usage info
USAGE
  exit 255
end

args = {}
begin
  opts = GetoptLong.new(
    ["--time",             "-t", GetoptLong::REQUIRED_ARGUMENT],
    ["--uuid",             "-u", GetoptLong::REQUIRED_ARGUMENT],
    ["--help",             "-h", GetoptLong::NO_ARGUMENT]
  )
  opts.each{ |k,v| args[k]=v }
rescue GetoptLong::Error => e
  usage
end

usage if args["--help"]

require "/var/www/openshift/broker/config/environment"

$count = 0
def clean_app(a)
  $count += 1
  Application.run_in_application_lock(a) do
    a.pending_op_groups.each { |op| op.delete if op.created_at < $t } 
    a.save
  end
end

hours = args["--time"] || 12
hours = hours.to_i
$t = Time.now - hours*60*60
uuid = args["--uuid"]

if uuid.nil?
  Application.lt("pending_op_groups.created_at" => $t).each { |a| clean_app(a) }
else
  Application.where(:uuid => uuid).lt("pending_op_groups.created_at" => $t).each { |a| clean_app(a) }
end

puts "#{$count} applications were cleaned up"
exit 0
