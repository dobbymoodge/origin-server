#!/usr/bin/env ruby
require 'fileutils'

# App is considered idle if it has not been accessed in 24 hours
OPENSHIFT_IDLE_TIME = 24
APP_ROOT_DIR = '/var/lib/stickshift'
CARTRIDGES_DIR = '/usr/libexec/stickshift/cartridges'

class IdleAppsFinder
  def initialize(app_root_dir)
    @idle_apps = Hash.new
    @app_root_dir = app_root_dir
  end

  def read_app_property(app_info, app_uuid, property)
    File.open("#{@app_root_dir}/#{app_uuid}/.env/#{property}") do |file|
      file.each_line do |line|
        parts = line.split("=")
        app_info[property] = parts[1].strip.delete("'")
      end
    end
  end

  def read_app_data(app_uuid)
    app_info = Hash.new
    properties = %w[OPENSHIFT_GEAR_NAME OPENSHIFT_GEAR_TYPE
                    OPENSHIFT_GEAR_DNS OPENSHIFT_GEAR_DIR]
    properties.each do |prop|
      read_app_property(app_info, app_uuid, prop)
    end
    app_info
  end

  def is_app_idle(app_info)
    # Invoke cartridge hook to know if app is idle
    cartridge_name = app_info['OPENSHIFT_GEAR_TYPE']
    command = "#{CARTRIDGES_DIR}/#{cartridge_name}/info/hooks/is-idle"\
    " #{app_info['OPENSHIFT_GEAR_DNS']}"\
    " #{app_info['OPENSHIFT_GEAR_DIR']}"\
    " #{OPENSHIFT_IDLE_TIME}"
    output = `#{command}`
    not $?.success?
  end

  def find_idle_apps
    # Iterate over all files in root directory
    puts "APP \t\t IDLE"
    Dir["#{@app_root_dir}/*"].each do |file|
      file_name = File.basename(file)

      # If filename is a length 32 uuid, then it is an app
      if file_name =~ /^[0-9a-f]{32}$/
        app_info = read_app_data(file_name)
        puts "#{app_info['OPENSHIFT_GEAR_DNS']}\t\t\t#{is_app_idle(app_info)}"
      end
    end
  end
end

iaf = IdleAppsFinder.new(APP_ROOT_DIR)
iaf.find_idle_apps
