#!/bin/bash
#
# libra         This shell script starts libra services
#
# Author:       Mike McGrath <mmcgrath@redhat.com>
#
# chkconfig:    345 89 01
#
# description:  Get information about the host
# processname:  NA
#

# source function library
. /etc/rc.d/init.d/functions
LIBRA_NODE_CONF=${LIBRA_NODE_CONF:=/etc/libra/node.conf}
LIBRA_NODE_DATA_CONF=${LIBRA_NODE_DATA_CONF:=/etc/libra/node_data.conf}

if [ -f $LIBRA_NODE_CONF ]
then
  . $LIBRA_NODE_CONF
fi
lockfile=/var/lock/subsys/libra

RETVAL=0
GROUP_RETVAL=0
SERVICE_URL_ROOT="http://169.254.169.254/latest/meta-data"

# determine if we're on an Amazon EC2 AMI instance
function ami_instance() {
   #the best way I've found so far to be sure is to use lspci.
   # on an AMI it answers with an empty string
   test -z "`lspci`"
}

function get_ami_public_interface_data() {
    echo -n "Getting Libra info"
    instance_id=$(wget -qO- ${SERVICE_URL_ROOT}/instance-id)
    
    # This allows node.conf to override public_ip
    # also, sometimes it takes a while for the public ip to be published in aws
    i=0
    while [ -z "$public_ip" ] && [ $i -lt 60 ]
    do
        [ $i -gt 0 ] && sleep 1 # we don't want to sleep on the first attempt
        public_ip=$(wget -qO- ${SERVICE_URL_ROOT}/public-ipv4)
        i=$(( i + 1 ))
    done

    # This allows node.conf to override public_hostname
    # also, sometimes it takes a while for the public hostname to be published in aws
    i=0
    while [ -z "$public_hostname" ] && [ $i -lt 60 ]
    do
        [ $i -gt 0 ] && sleep 1 # we don't want to sleep on the first attempt
        public_hostname=$(wget -qO- ${SERVICE_URL_ROOT}/public-hostname)
        i=$(( i + 1 ))
    done

    echo_success
    echo
    return
}

function get_host_interface_data() {
    # not an EC2 instance
    #NET_DEVICE=$1
    instance_id="not_applicable"

    # check eth0?
    public_ip=`ip --oneline addr show dev $1  | grep 'inet ' | sed -e 's/^.*inet // ; s|/.*$||'`
    # hostname ?
    public_hostname=`host $public_ip | awk '{sub(/\.$/, "") ; print $5;}'`
    # for later parsing
    #echo "$instance_id:$public_ip:$public_hostname"
}

function init_node_data() {
    # instance_id=$1
    # public_ip=$2
    # public_hostname=$3
    cat <<EOF > $LIBRA_NODE_DATA_CONF
instance_id="$1"
public_ip="$2"
public_hostname="$3"
EOF
}

start() {
    if ami_instance
    then
	get_ami_public_interface_data
    else
	get_host_interface_data "eth0"
    fi
    init_node_data $instance_id $public_ip $public_hostname
    chmod o-rws $LIBRA_NODE_DATA_CONF
    return
}

stop() {
    return
}

restart() {
    stop
    start
}

status() {
    # check if node.conf exists
    if [ -f $LIBRA_NODE_CONF ]
    then
	echo "Node configuration file exists: $LIBRA_NODE_CONF"
    else
	echo "Node configuration file does not exist: $LIBRA_NODE_CONF"
    fi
 
    if [ -f $LIBRA_NODE_DATA_CONF ]
    then
	echo "Node data configuration file exists: $LIBRA_NODE_CONF"

    else
	echo "Node data configuration file does not exist: $LIBRA_NODE_CONF"
    fi
}

case "$1" in
  start)
    start
    ;;
  stop) 
    stop
    ;;
  restart|force-reload)
    restart
    ;;
  reload)
    ;;
  status)
    status
    ;;
  *)
    echo $"Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart}"
    exit 1
esac

exit $RETVAL
