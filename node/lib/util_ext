#!/bin/bash

[ ! -z "$LI_CONTROLLER_LIB_EXT" ] && return 0
LI_CONTROLLER_LIB_EXT=true

function get_mcs_level() {
    SETSIZE=1023
    TIER=$SETSIZE

    ORD=$1
    while [ $ORD -gt $(($TIER)) ] ; do
    ORD=$(($ORD - $TIER))
    TIER=$(($TIER - 1))
    done
    TIER=$(($SETSIZE - $TIER))
    echo s0:c$TIER,c$(($ORD + $TIER))
}

function setup_user_vars {
    uid=$(id -u "$uuid")
    mcs_level=`get_mcs_level $uid`
    export mcs_level
}

function observe_setup_app_home {
    restorecon -R $APP_HOME
}

function observe_setup_var_lib_dir {
    chcon -t libra_var_lib_t -l $mcs_level -R $1
}

function observe_setup_var_lib_file {
    chcon -t libra_var_lib_t -l $mcs_level $1
}

function run_as_user {
    _uuid=${uuid:-$OPENSHIFT_APP_UUID}
    if [ "`whoami`" = "$_uuid" ]; then
        #  Run confined as user - temporary bandaid to fix issues with
        #  ss-connector-execute - connection hooks are run unconfined.
        if [ "$(runcon | cut -f 3 -d ':')" != "libra_t" ]; then
            runcon -t libra_t -l $mcs_level $@
        else
            eval "$1"
        fi
    else
        runuser --shell /bin/sh "$_uuid" -c "runcon -t libra_t -l $mcs_level $1"
    fi
}

function super_run_as_user {
    /bin/su -s /bin/sh "$uuid" -c "runcon -t libra_t -l $mcs_level $1"
}

function daemon_as_user {
    daemon --user="$uuid" runcon -r system_r -t libra_t -l $mcs_level "$@"
}

function validate_run_as_user {
    uuid=$OPENSHIFT_APP_UUID
    setup_user_vars

    if whoami | grep -q root || ! runcon | grep system_r:libra_t:$mcs_level > /dev/null
    then
        echo 1>&2
        echo "Current context: " `runcon` 1>&2
        echo 1>&2
        echo "Please run script in the correct context, try:" 1>&2
        echo "run_as_user \"<command>\"" 1>&2
        echo 2>&1
        exit 15
    fi
}
