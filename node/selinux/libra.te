policy_module(libra,1.0.7)

########################################
#
# Declarations
#
attribute libra_domain;

type libra_initrc_t;
type libra_initrc_exec_t;
init_daemon_domain(libra_initrc_t, libra_initrc_exec_t)
init_ranged_daemon_domain(libra_initrc_t, libra_initrc_exec_t, s0 - mcs_systemhigh)

type libra_tmp_t;
files_tmp_file(libra_tmp_t)

type libra_var_lib_t;
files_type(libra_var_lib_t)

type libra_t;
libra_service_domain(libra_t)

type libra_net_t;
libra_service_domain(libra_net_t)

type libra_min_t;
libra_service_domain(libra_min_t)

########################################
#
# libra standard local policy
#
corenet_tcp_connect_mysqld_port(libra_t)
corenet_tcp_connect_http_port(libra_t)
corenet_tcp_connect_http_cache_port(libra_t)
corenet_tcp_connect_amqp_port(libra_t)
corenet_tcp_connect_generic_port(libra_t)
corenet_udp_bind_generic_port(libra_t)

########################################
#
# libra net local policy
#
corenet_tcp_connect_all_ports(libra_net_t)

########################################
#
# libra general local policy
#
allow libra_domain self:process { getattr fork getpgid setpgid setrlimit setsched signal_perms ptrace getsched };
allow libra_domain self:sem create_sem_perms;
allow libra_domain self:tcp_socket  create_stream_socket_perms;

allow libra_domain self:fifo_file rw_fifo_file_perms;
allow libra_domain self:unix_stream_socket { create_stream_socket_perms connectto };

manage_dirs_pattern(libra_domain, libra_tmp_t, libra_tmp_t)
manage_files_pattern(libra_domain, libra_tmp_t, libra_tmp_t)
files_tmp_filetrans(libra_domain, libra_tmp_t, { file dir })

manage_dirs_pattern(libra_domain, libra_var_lib_t, libra_var_lib_t)
manage_files_pattern(libra_domain, libra_var_lib_t, libra_var_lib_t)
manage_sock_files_pattern(libra_domain, libra_var_lib_t, libra_var_lib_t)
manage_lnk_files_pattern(libra_domain, libra_var_lib_t, libra_var_lib_t)
files_var_lib_filetrans(libra_domain, libra_var_lib_t, { dir file sock_file } )

kernel_read_system_state(libra_domain)
kernel_dontaudit_search_kernel_sysctl(libra_domain)

dev_read_rand(libra_domain)

files_read_usr_files(libra_domain)

corecmd_exec_bin(libra_domain)
corecmd_exec_shell(libra_domain)

domain_use_interactive_fds(libra_domain)
domain_dontaudit_read_all_domains_state(libra_domain)

files_read_etc_files(libra_domain)

auth_use_nsswitch(libra_domain)

logging_send_syslog_msg(libra_domain)

miscfiles_read_localization(libra_domain)

term_dontaudit_search_ptys(libra_domain)

apache_exec(libra_domain)
apache_exec_modules(libra_domain)
apache_list_modules(libra_domain)
apache_read_config(libra_domain)
apache_search_config(libra_domain)
apache_read_sys_content(libra_domain)
corenet_tcp_bind_http_cache_port(libra_domain)

########################################
#
# libra initrc local policy
#

gen_require(`
    role system_r;
    role unconfined_r;
    type unconfined_t;
')
 
role_transition unconfined_r libra_initrc_exec_t system_r;
unconfined_domain_noaudit(libra_initrc_t)

domtrans_pattern(unconfined_t, libra_initrc_exec_t, libra_initrc_t)

allow libra_initrc_t libra_domain:process { getattr getsched setsched transition signal signull sigkill };
allow libra_domain libra_initrc_t:fd use;
allow libra_domain libra_initrc_t:fifo_file rw_inherited_fifo_file_perms;
allow libra_domain libra_initrc_t:process sigchld;

########################################
#
# generic policy 
#

require {
	type httpd_exec_t;
	attribute exec_type;
	type sshd_t;
	type httpd_t;
}

allow libra_domain httpd_exec_t:file entrypoint;
dontaudit libra_domain exec_type:file getattr;

libra_search_lib(sshd_t)
allow httpd_t libra_var_lib_t:dir search;

##########
# Used for development or when the li controller is running outside
# of the li framework (like when it's installed in /var/www/html

corenet_tcp_connect_amqp_port(httpd_t)
corenet_udp_bind_generic_port(httpd_t)

#################################
# Potentially dangerous configs #
#################################

# Allow users to execute files in their home dir
# allow libra_t libra_var_lib_t:file { execute execute_no_trans };
