
## <summary>policy for libra</summary>


########################################
## <summary>
##	Execute libra server in the libra domain.
## </summary>
## <param name="domain">
##	<summary>
##	The type of the process performing this action.
##	</summary>
## </param>
#
interface(`libra_initrc_domtrans',`
	gen_require(`
		type libra_initrc_exec_t;
	')

	init_labeled_script_domtrans($1, libra_initrc_exec_t)
')

########################################
## <summary>
##	Search libra cache directories.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`libra_search_cache',`
	gen_require(`
		type libra_cache_t;
	')

	allow $1 libra_cache_t:dir search_dir_perms;
	files_search_var($1)
')

########################################
## <summary>
##	Read libra cache files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`libra_read_cache_files',`
	gen_require(`
		type libra_cache_t;
	')

	files_search_var($1)
        read_files_pattern($1, libra_cache_t libra_cache_t)
')

########################################
## <summary>
##	Create, read, write, and delete
##	libra cache files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`libra_manage_cache_files',`
	gen_require(`
		type libra_cache_t;
	')

	files_search_var($1)
        manage_files_pattern($1, libra_cache_t, libra_cache_t)
')

########################################
## <summary>
##	Create, read, write, and delete
##	libra cache dirs.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`libra_manage_cache_dirs',`
	gen_require(`
		type libra_cache_t;
	')

	files_search_var($1)
        manage_dirs_pattern($1, libra_cache_t, libra_cache_t)
')


########################################
## <summary>
##	Allow the specified domain to read libra's log files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <rolecap/>
#
interface(`libra_read_log',`
	gen_require(`
		type libra_log_t;
	')

	logging_search_logs($1)
        read_files_pattern($1, libra_log_t, libra_log_t)
')

########################################
## <summary>
##	Allow the specified domain to append
##	libra log files.
## </summary>
## <param name="domain">
## 	<summary>
##	Domain allowed to transition.
## 	</summary>
## </param>
#
interface(`libra_append_log',`
	gen_require(`
		type libra_log_t;
	')

	logging_search_logs($1)
        append_files_pattern($1, libra_log_t, libra_log_t)
')

########################################
## <summary>
##	Allow domain to manage libra log files
## </summary>
## <param name="domain">
##	<summary>
##	Domain to not audit.
##	</summary>
## </param>
#
interface(`libra_manage_log',`
	gen_require(`
		type libra_log_t;
	')

	logging_search_logs($1)
        manage_dirs_pattern($1, libra_log_t, libra_log_t)
        manage_files_pattern($1, libra_log_t, libra_log_t)
        manage_lnk_files_pattern($1, libra_log_t, libra_log_t)
')

########################################
## <summary>
##	Search libra lib directories.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`libra_search_lib',`
	gen_require(`
		type libra_var_lib_t;
	')

	allow $1 libra_var_lib_t:dir search_dir_perms;
	files_search_var_lib($1)
')

########################################
## <summary>
##	Read libra lib files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`libra_read_lib_files',`
	gen_require(`
		type libra_var_lib_t;
	')

	files_search_var_lib($1)
        read_files_pattern($1, libra_var_lib_t, libra_var_lib_t)
')

########################################
## <summary>
##	Create, read, write, and delete
##	libra lib files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`libra_manage_lib_files',`
	gen_require(`
		type libra_var_lib_t;
	')

	files_search_var_lib($1)
        manage_files_pattern($1, libra_var_lib_t, libra_var_lib_t)
')

########################################
## <summary>
##	Manage libra lib dirs files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`libra_manage_lib_dirs',`
	gen_require(`
		type libra_var_lib_t;
	')

	files_search_var_lib($1)
        manage_dirs_pattern($1, libra_var_lib_t, libra_var_lib_t)
')


########################################
## <summary>
##	Read libra PID files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`libra_read_pid_files',`
	gen_require(`
		type libra_var_run_t;
	')

	files_search_pids($1)
	allow $1 libra_var_run_t:file read_file_perms;
')


########################################
## <summary>
##	All of the rules required to administrate
##	an libra environment
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	Role allowed access.
##	</summary>
## </param>
## <rolecap/>
#
interface(`libra_admin',`
	gen_require(`
		type libra_t;
		type libra_initrc_exec_t;
                type libra_cache_t;
                type libra_log_t;
                type libra_var_lib_t;
                type libra_var_run_t;
	')

	allow $1 libra_t:process { ptrace signal_perms };
	ps_process_pattern($1, libra_t)

	libra_initrc_domtrans($1)
	domain_system_change_exemption($1)
	role_transition $2 libra_initrc_exec_t system_r;
	allow $2 system_r;

	files_search_var($1)
	admin_pattern($1, libra_cache_t)

	logging_search_logs($1)
	admin_pattern($1, libra_log_t)

	files_search_var_lib($1)
	admin_pattern($1, libra_var_lib_t)

	files_search_pids($1)
	admin_pattern($1, libra_var_run_t)

')

########################################
## <summary>
##	Make the specified type usable as a libra domain.
## </summary>
## <param name="type">
##	<summary>
##	Type to be used as a libra domain type.
##	</summary>
## </param>
#
template(`libra_service_domain',`
	gen_require(`
		attribute libra_domain;
	')

	typeattribute $1 libra_domain;
	domain_type($1)
	role system_r types $1;
	mcs_untrusted_proc($1)
')
